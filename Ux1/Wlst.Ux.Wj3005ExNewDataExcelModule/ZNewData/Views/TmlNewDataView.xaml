<UserControl x:Class="Wlst.Ux.Wj3005ExNewDataExcelModule.ZNewData.Views.TmlNewDataView"
               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" mc:Ignorable="d" Background="{x:Null}"
             d:DesignHeight="245" d:DesignWidth="980">
    <Grid  Background="{x:Null}">
        <Label x:Name="fg" />

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="180"></ColumnDefinition>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="32" />
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="{Binding DataHeiht}"></RowDefinition>

            </Grid.RowDefinitions>


            <Canvas x:Name="CVAS"  Background="{x:Null}" Height="250" VerticalAlignment="Top"
                    
                    MinWidth="250" HorizontalAlignment="Left" Focusable="true"  AllowDrop="True" Margin="4,10,0,0" Grid.ColumnSpan="3" Grid.RowSpan="3" >


                <Line Stroke="Red" x:Name="linxxx" StrokeThickness="2"  X1="7" Y1="3"  X2="7"  Y2="3" />
                <Line Stroke="Red" x:Name="linyyy" StrokeThickness="2"  X1="7" Y1="3"  X2="7"  Y2="3" />

                <ItemsControl ItemsSource="{Binding TextBlockInfoItemss}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">

                            <Setter Property="Canvas.Top" Value="{Binding Top}" />
                            <Setter Property="Canvas.Left" Value="{Binding Left}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>

                        <DataTemplate>
                            <Border  Background="{x:Null}"  CornerRadius="{Binding CornerRadius}"  BorderThickness="{Binding BorderThinkness}" 
                                     VerticalAlignment="Center" HorizontalAlignment="{Binding HorizontalAlign}" 
                                                Height="{Binding Height}" Width="{Binding Width}" BorderBrush="{Binding Color}">
                                <TextBlock Foreground="{Binding ElementName=fg, Path=Foreground}" ToolTip="{Binding Tooltips}" Height="19" Text="{Binding Text}" HorizontalAlignment="{Binding HorizontalAlign}"></TextBlock>

                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <ItemsControl ItemsSource="{Binding TextBlock1InfoItemss}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <!-- Here would the binding to some properties that take care of placement -->
                            <Setter Property="Canvas.Top" Value="{Binding Top}" />
                            <Setter Property="Canvas.Left" Value="{Binding Left}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <!-- Some template for the individual items -->
                        <DataTemplate>
                            <Border  Background="{Binding BackgroundColor}"  CornerRadius="{Binding CornerRadius}"  BorderThickness="{Binding BorderThinkness}" 
                                     VerticalAlignment="Center" HorizontalAlignment="{Binding HorizontalAlign}" 
                                                Height="{Binding Height}" Width="{Binding Width}" BorderBrush="{Binding Color}">
                                <TextBlock  Background="{Binding BackgroundColor}" Foreground="{Binding ElementName=fg, Path=Foreground}" ToolTip="{Binding Tooltips}" Height="19" Text="{Binding Text}" HorizontalAlignment="{Binding HorizontalAlign}"></TextBlock>

                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>


                <ItemsControl ItemsSource="{Binding LineItemss}" >

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <!-- Here would the binding to some properties that take care of placement -->
                            <!--<Setter Property="Canvas.Top" Value="{Binding Y1onMap}" />
                                        <Setter Property="Canvas.Left" Value="{Binding X1onMap}" />-->
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <!-- Some template for the individual items -->
                        <DataTemplate>
                            <Line Stroke="{Binding Color}" 
                                              StrokeThickness="{Binding StrokeThickness}" ToolTip="{Binding Tooltips}"
                                              X1="{Binding X1}"
                                              X2="{Binding X2}"
                                              Y1="{Binding Y1}"
                                              Y2="{Binding Y2}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ItemsControl ItemsSource="{Binding ArcItemss}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <!-- Some template for the individual items -->
                        <DataTemplate>
                            <Path Stroke="{Binding Color}" StrokeThickness="1">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="{Binding StartPoint}" IsClosed="False">
                                            <ArcSegment Point="{Binding Point}" Size="5,5"></ArcSegment>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ItemsControl ItemsSource="{Binding EllItemss}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <!-- Here would the binding to some properties that take care of placement -->
                            <Setter Property="Canvas.Top" Value="{Binding Top}" />
                            <Setter Property="Canvas.Left" Value="{Binding Left}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>

                    <ItemsControl.ItemTemplate>
                        <!-- Some template for the individual items -->
                        <DataTemplate>
                            <Ellipse   Fill="{Binding Color}" Width="{Binding Wide}" Height="{Binding Wide}"></Ellipse>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <Border  Background="{x:Null}" CornerRadius="{Binding Mit.CornerRadius}"  BorderThickness="{Binding Mit.BorderThinkness}"  
                         Canvas.Top="{Binding Mit.Top}"  Canvas.Left="{Binding Mit.Left}" 
                                     VerticalAlignment="Center" HorizontalAlignment="Center"
                                                Height="{Binding Mit.Height}" Width="{Binding Mit.Width}" BorderBrush="{Binding Mit.Color}">
                    <TextBox Height="45" Width="45" VerticalAlignment="Center" HorizontalAlignment="Center"  TextAlignment="Center"
                               Foreground="{Binding ElementName=fg, Path=Foreground}"  
                             Background="Transparent" MouseDoubleClick="TextBlock_MouseUp"
                             BorderThickness="0" IsReadOnly="True" Cursor="Arrow"
                               ContextMenu="{DynamicResource  ContextMenuKey}"  Text="{Binding Mit.Text}">
                    </TextBox>
                </Border>


                <TextBlock Height="25" Width="45" VerticalAlignment="Center" HorizontalAlignment="Center"  TextAlignment="Center"
                               Foreground="{Binding Mit1.Color}"     Canvas.Top="{Binding Mit1.Top}"  Canvas.Left="{Binding Mit1.Left}" 
                             Background="Transparent"  Cursor="Arrow" 
                                 Text="{Binding Mit1.Text}" Visibility="{Binding AssetManageInfoVisibility}">
                </TextBlock>

                <Border  Background="{x:Null}" CornerRadius="{Binding Mitx.CornerRadius}"  BorderThickness="{Binding Mitx.BorderThinkness}"  
                         Canvas.Top="{Binding Mitx.Top}"  Canvas.Left="{Binding Mitx.Left}" 
                                     VerticalAlignment="Center" HorizontalAlignment="Left"
                                                Height="{Binding Mitx.Height}" Width="{Binding Mitx.Width}" BorderBrush="{Binding Mitx.Color}">
                    <TextBox  VerticalAlignment="Center" HorizontalAlignment="Left"  TextAlignment="Left"
                               Foreground="{Binding ElementName=fg, Path=Foreground}"  x:Name="rtuname"
                             Background="Transparent"  MouseDoubleClick="TextBox_MouseDoubleClick"
                             BorderThickness="0" IsReadOnly="True" Cursor="Arrow"
                                Text="{Binding Mitx.Text}">
                        <TextBox.Triggers>
                            <EventTrigger 
        RoutedEvent="TextBox.TextChanged">
                                <BeginStoryboard>

                                    <Storyboard>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:01.2000000" 
                                                           Storyboard.TargetName="linxxx" Storyboard.TargetProperty="(Line.X1)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="7"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.2000000" Value="7"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.6000000" 
                                                           Storyboard.TargetName="linxxx" Storyboard.TargetProperty="(Line.X2)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="7"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="{Binding CanWidth}"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Duration="00:00:00.8000000" 
                                                           Storyboard.TargetName="linxxx" Storyboard.TargetProperty="(Line.X1)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="7"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.8000000" Value="{Binding CanWidth}"/>
                                        </DoubleAnimationUsingKeyFrames>


                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:01.2000000" 
                                                           Storyboard.TargetName="linyyy" Storyboard.TargetProperty="(Line.Y1)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="3"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.2000000" Value="3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.6000000" 
                                                           Storyboard.TargetName="linyyy" Storyboard.TargetProperty="(Line.Y2)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="3"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="{Binding CanHeight}"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Duration="00:00:00.8000000" 
                                                           Storyboard.TargetName="linyyy" Storyboard.TargetProperty="(Line.Y1)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="3"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.8000000" Value="{Binding CanHeight}"/>
                                        </DoubleAnimationUsingKeyFrames>


                                    </Storyboard>

                                </BeginStoryboard>
                            </EventTrigger>
                        </TextBox.Triggers>
                    </TextBox>

                </Border>

            </Canvas>

            <StackPanel Grid.Column="3" Margin="0,0,10,0"  >
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0" Height="25" HorizontalAlignment="Right" >
                    <TextBlock  VerticalAlignment="Center"  HorizontalAlignment="Right" Margin="5,0,20,0" Text="{Binding TimeInfo}" ></TextBlock>
                </StackPanel>
                <DockPanel  Margin="0,0,0,0" HorizontalAlignment="Right">
                    <TextBlock  VerticalAlignment="Top"  HorizontalAlignment="Right" Margin="5,0,0,0" Text="选测失败" Foreground ="Red" Visibility="{Binding IsShowFailVis}" ></TextBlock>
                    <!--<TextBlock  VerticalAlignment="Top"  HorizontalAlignment="Right" Margin="5,10,0,5" Text="{Binding TimeInfo}" ></TextBlock>-->
                     <TextBlock  VerticalAlignment="Top"  HorizontalAlignment="Right" Margin="5,10,0,5" Text="{Binding SumInfo}"  ></TextBlock>

                </DockPanel>

                <!--<DataGrid AutoGenerateColumns="False"   Background="Transparent"   ItemsSource="{Binding LoopxInfo}"    BorderThickness="1" CanUserReorderColumns="True"   
                      VerticalAlignment="Top"  HorizontalAlignment="Left"  MaxHeight="{Binding DataHeihtx}"  Name="loopinfo" MouseDoubleClick="loopinfo_MouseDoubleClick"
                     RowHeight="{Binding RowHightx}"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" ColumnReordered="loopinfo_ColumnReordered"
                                  >

                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="{Binding Path=Backgroundx, Mode=OneWay}" />

                        </Style>

                    </DataGrid.RowStyle>
                   
                    <DataGrid.ColumnHeaderStyle>
                        <Style  TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        </Style>

                    </DataGrid.ColumnHeaderStyle>

                    <DataGrid.Columns>

                        <DataGridTextColumn Header="回路"  Width="40" Binding="{Binding LoopId}" x:Name="cx0" IsReadOnly="True" />
                        <DataGridTextColumn Header="回路名称"  Width="90"  Binding="{Binding LoopName}" x:Name="cx1"  IsReadOnly="True" />
                       
                        <DataGridTemplateColumn Width="40" Header="状态" IsReadOnly="True" >

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>

                                    <TextBlock Height="{Binding RowHeight,ElementName=loopinfo}" Text="{Binding SwitchInState}"   HorizontalAlignment="Left" 
                                               Foreground="{Binding IsRed}"/>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="电压"  Binding="{Binding V}"  IsReadOnly="True" Width="60"/>
                        <DataGridTextColumn Header="额定电流"  Binding="{Binding RefA}"  x:Name="cx2"  IsReadOnly="True" Width="65"/>
                        <DataGridTextColumn Header="电流"  Binding="{Binding A}"  IsReadOnly="True" Width="65"/>
                        <DataGridTextColumn Header="昨日电流"  Binding="{Binding YesterdayA}"  x:Name="cx12"  Visibility="{Binding IsCompareCheck}" IsReadOnly="True" Width="65"/>
                        <DataGridTextColumn Header="功率"  Binding="{Binding Power}"  x:Name="cx17"  IsReadOnly="True" Width="45"/>
                        <DataGridTextColumn Header="昨日功率"  Binding="{Binding YesterdayP}"  x:Name="cx13"  Visibility="{Binding IsCompareCheck}" IsReadOnly="True" Width="65"/>
                        <DataGridTextColumn Header="亮灯率"  Binding="{Binding BrightRate}"  x:Name="cx3"  IsReadOnly="True" Width="60"/>
                        <DataGridTextColumn Header="功率因数"  Binding="{Binding PowerFactor}"  x:Name="cx4"  IsReadOnly="True"  Width="65"/>
                        <DataGridTextColumn Header="电流上限"  Binding="{Binding Upper}"  x:Name="cx6"  Visibility="{Binding IsDetailCheck}" IsReadOnly="True" Width="65"/>
                         <DataGridTextColumn Header="电流下限"  Binding="{Binding Lower}"  x:Name="cx7"  Visibility="{Binding IsDetailCheck}" IsReadOnly="True" Width="65"/>
                       <DataGridTextColumn Header="互感器比"  Binding="{Binding Ratio}"  x:Name="cx5"  Visibility="{Binding IsDetailCheck}" IsReadOnly="True" Width="65">

                        </DataGridTextColumn>
                        <DataGridTemplateColumn Width="40" Header="线路"  x:Name="cx08"  IsReadOnly="True" >

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>

                                    <TextBlock Height="{Binding RowHeight,ElementName=loopinfo}"  Text="{Binding AttachInfo}"   HorizontalAlignment="Left" 
                                               Foreground="{Binding BackgroundAttach}"/>

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>

                </DataGrid>-->

                <telerik:RadGridView x:Name="loopinfo" AutoGenerateColumns="False" ItemsSource="{Binding LoopxInfo}"  MaxHeight="{Binding DataHeihtx}"   
								 Background="Transparent" Margin="0,5,10,0"  BorderThickness="0"   ColumnReordered="loopinfo_ColumnReordered" 
								  HorizontalAlignment="Left"                AlternationCount="0"
								  VerticalAlignment="Stretch" MouseDoubleClick="loopinfo_MouseDoubleClick"
                                  CanUserFreezeColumns="False"   
								  CanUserReorderColumns="True" RowLoaded="loopinfo_RowLoaded" 
								  RowIndicatorVisibility="Collapsed"   ShowGroupPanel="False" ShowColumnHeaders="True" SnapsToDevicePixels="True" >
    
                    <telerik:RadGridView.Columns>

                        <telerik:GridViewDataColumn Header="回路" IsFilterable="False" IsSortable="False" Width="40" DataMemberBinding="{Binding LoopId}" x:Name="cx0" IsReadOnly="True" />
                        <telerik:GridViewDataColumn Header="回路名称"   IsFilterable="False" IsSortable="False" Width="90"  DataMemberBinding="{Binding LoopName}" x:Name="cx1"  IsReadOnly="True" />

                        <telerik:GridViewDataColumn Width="40" Header="状态"  IsFilterable="False" IsSortable="False" IsReadOnly="True" >

                            <telerik:GridViewDataColumn.CellTemplate>
                                <DataTemplate>

                                    <TextBlock Height="{Binding RowHeight,ElementName=loopinfo}" Text="{Binding SwitchInState}"   HorizontalAlignment="Left" 
                                               Foreground="{Binding IsRed}"/>

                                </DataTemplate>
                                </telerik:GridViewDataColumn.CellTemplate>
                            </telerik:GridViewDataColumn>
                        <telerik:GridViewDataColumn Header="相位"   IsFilterable="False" IsSortable="False" DataMemberBinding="{Binding Phase}"   IsVisible="{Binding IsPhaseVisible}"  IsReadOnly="True" Width="60"/>
                        <telerik:GridViewDataColumn Header="电压"   IsFilterable="False" IsSortable="False" DataMemberBinding="{Binding V}"  IsReadOnly="True" Width="60"/>
                        <telerik:GridViewDataColumn Header="额定电流"  IsFilterable="False" IsSortable="False"  DataMemberBinding="{Binding RefA}"  x:Name="cx2"  IsReadOnly="True" Width="65"/>
                        <telerik:GridViewDataColumn Header="电流"   IsFilterable="False" IsSortable="False" DataMemberBinding="{Binding A}"  IsReadOnly="True" Width="65"/>
                        <telerik:GridViewDataColumn Header="昨日电流"   IsFilterable="False" IsSortable="False" DataMemberBinding="{Binding YesterdayA}"  x:Name="cx12"  IsVisible="{Binding IsCompareCheck}" IsReadOnly="True" Width="65"/>
                        <telerik:GridViewDataColumn Header="功率"   IsFilterable="False" IsSortable="False" DataMemberBinding="{Binding Power}"  x:Name="cx17"  IsReadOnly="True" Width="45"/>
                        <telerik:GridViewDataColumn Header="昨日功率"   IsFilterable="False" IsSortable="False" DataMemberBinding="{Binding YesterdayP}"  x:Name="cx13"  IsVisible="{Binding IsCompareCheck}" IsReadOnly="True" Width="65"/>
                        <telerik:GridViewDataColumn Header="亮灯率"   IsFilterable="False" IsSortable="False" DataMemberBinding="{Binding BrightRate}"  x:Name="cx3"  IsReadOnly="True" Width="60"/>
                        <telerik:GridViewDataColumn Header="功率因数"   IsFilterable="False" IsSortable="False" DataMemberBinding="{Binding PowerFactor}"  x:Name="cx4"  IsReadOnly="True"  Width="68"/>
                        <telerik:GridViewDataColumn Header="电流上限"   IsFilterable="False" IsSortable="False" DataMemberBinding="{Binding Upper}"  x:Name="cx6"  IsVisible="{Binding IsDetailCheck}" IsReadOnly="True" Width="68"/>
                        <telerik:GridViewDataColumn Header="电流下限"   IsFilterable="False" IsSortable="False" DataMemberBinding="{Binding Lower}"  x:Name="cx7"  IsVisible="{Binding IsDetailCheck}" IsReadOnly="True" Width="68"/>
                        <telerik:GridViewDataColumn Header="互感器比"   IsFilterable="False" IsSortable="False" DataMemberBinding="{Binding Ratio}"  x:Name="cx5"  IsVisible="{Binding IsDetailCheck}" IsReadOnly="True" Width="68">

                        </telerik:GridViewDataColumn>
                        <telerik:GridViewDataColumn Width="40"  IsFilterable="False" IsSortable="False" Header="检测"  x:Name="cx08"  IsReadOnly="True" >


                            <telerik:GridViewDataColumn.CellTemplate>
                                <DataTemplate>

                                    <TextBlock Height="{Binding RowHeight,ElementName=loopinfo}"  Text="{Binding AttachInfo}"   HorizontalAlignment="Left" 
                                               Foreground="{Binding BackgroundAttach}"/>

                                </DataTemplate>
                            </telerik:GridViewDataColumn.CellTemplate>
                        </telerik:GridViewDataColumn>

                        <telerik:GridViewDataColumn Width="80"  IsFilterable="False" IsSortable="False" Header="线路"  x:Name="cx19"  IsReadOnly="True" >


                            <telerik:GridViewDataColumn.CellTemplate>
                                <DataTemplate>

                                    <TextBlock Height="{Binding RowHeight,ElementName=loopinfo}"  Text="{Binding AttachInfoName}"   HorizontalAlignment="Left" 
                                               Foreground="{Binding BackgroundAttach}"/>

                                </DataTemplate>
                            </telerik:GridViewDataColumn.CellTemplate>
                        </telerik:GridViewDataColumn>
                        
                        <telerik:GridViewDataColumn Width="40"  IsFilterable="False" IsSortable="False" Header="屏蔽"   x:Name="cx18"   IsReadOnly="True" >

                            <telerik:GridViewDataColumn.CellTemplate>
                                <DataTemplate>

                                    <TextBlock Height="{Binding RowHeight,ElementName=loopinfo}"  Text="{Binding ShieldLoopMark}"   HorizontalAlignment="Left" 
                                               Foreground="{Binding BackgroundShield}"/>

                                </DataTemplate>
                            </telerik:GridViewDataColumn.CellTemplate>
                        </telerik:GridViewDataColumn>

                    </telerik:RadGridView.Columns>
                    
                    
                </telerik:RadGridView>
            </StackPanel>




        </Grid>
    </Grid>
</UserControl>
