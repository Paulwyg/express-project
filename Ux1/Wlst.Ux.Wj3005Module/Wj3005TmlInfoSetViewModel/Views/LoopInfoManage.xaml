<UserControl x:Class="Wlst.Ux.WJ3005Module.Wj3005TmlInfoSetViewModel.Views.LoopInfoManage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:Service="clr-namespace:Wlst.Ux.WJ3005Module.Wj3005TmlInfoSetViewModel.Services" mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000">
    <UserControl.Resources>
        <Service:LittleAConverter x:Key="LittleAConverter"/>
    </UserControl.Resources>
    <Grid HorizontalAlignment="Left">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <GroupBox MinHeight="60" Header="开关量输出信息">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70" MaxWidth="90"></ColumnDefinition>
                        <ColumnDefinition Width="70" MaxWidth="90"></ColumnDefinition>
                        <ColumnDefinition Width="70" MaxWidth="90"></ColumnDefinition>
                        <ColumnDefinition Width="70" MaxWidth="90"></ColumnDefinition>
                        <ColumnDefinition Width="70" MaxWidth="90"></ColumnDefinition>
                        <ColumnDefinition Width="70" MaxWidth="90"></ColumnDefinition>
                        <ColumnDefinition Width="70" MaxWidth="90"></ColumnDefinition>
                        <ColumnDefinition Width="70" MaxWidth="90"></ColumnDefinition>
                        <ColumnDefinition Width="70" MaxWidth="90"></ColumnDefinition>
                        <ColumnDefinition Width="90" MaxWidth="120"></ColumnDefinition>
                        <ColumnDefinition Width="70" MaxWidth="90"></ColumnDefinition>
                        <!--<ColumnDefinition Width="70" MaxWidth="90"></ColumnDefinition>-->
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" MaxHeight="35"></RowDefinition>
                        <RowDefinition Height="25"  MaxHeight="35"></RowDefinition>
                        <RowDefinition Height="25"  MaxHeight="35"></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock Text="输出信息" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Text="输出矢量"  Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Text="输出回路"  Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>


                    <TextBox Text="{Binding RtuParaSwitchOutViewModels[0].SwichtOutName}" MinWidth="60" Grid.Row="0" Grid.Column="1"   HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox Margin="2"   Grid.Row="1" Grid.Column="1" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[0].Vector}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox  Margin="2"  Grid.Row="2" Grid.Column="1" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[0].LoopSum}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>

                    <TextBox Text="{Binding RtuParaSwitchOutViewModels[1].SwichtOutName}" MinWidth="60" Grid.Row="0" Grid.Column="2"   HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox Margin="2"  Grid.Row="1" Grid.Column="2" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[1].Vector}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox Margin="2"   Grid.Row="2" Grid.Column="2" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[1].LoopSum}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>


                    <TextBox Text="{Binding RtuParaSwitchOutViewModels[2].SwichtOutName}" MinWidth="60" Grid.Row="0" Grid.Column="3"   HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox  Margin="2"  Grid.Row="1" Grid.Column="3" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[2].Vector}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox  Margin="2"  Grid.Row="2" Grid.Column="3" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[2].LoopSum}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>

                    <TextBox Text="{Binding RtuParaSwitchOutViewModels[3].SwichtOutName}" MinWidth="60" Grid.Row="0" Grid.Column="4"   HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox  Margin="2"  Grid.Row="1" Grid.Column="4" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[3].Vector}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox  Margin="2"  Grid.Row="2" Grid.Column="4" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[3].LoopSum}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>

                    <TextBox Text="{Binding RtuParaSwitchOutViewModels[4].SwichtOutName}" MinWidth="60" Grid.Row="0" Grid.Column="5"   HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox  Margin="2"  Grid.Row="1" Grid.Column="5" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[4].Vector}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox  Margin="2"  Grid.Row="2" Grid.Column="5" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[4].LoopSum}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>

                    <TextBox Text="{Binding RtuParaSwitchOutViewModels[5].SwichtOutName}" MinWidth="60" Grid.Row="0" Grid.Column="6"  HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox  Margin="2"  Grid.Row="1" Grid.Column="6" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[5].Vector}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox  Margin="2"  Grid.Row="2" Grid.Column="6" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[5].LoopSum}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>

                    <TextBox Text="{Binding RtuParaSwitchOutViewModels[6].SwichtOutName}" MinWidth="60" Grid.Row="0" Grid.Column="7"  HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Visi}"></TextBox>
                    <TextBox  Margin="2"  Grid.Row="1" Grid.Column="7" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[6].Vector}" Visibility="{Binding Visi}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox  Margin="2"  Grid.Row="2" Grid.Column="7" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[6].LoopSum}" Visibility="{Binding Visi}"  HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>

                    <TextBox Text="{Binding RtuParaSwitchOutViewModels[7].SwichtOutName}" MinWidth="60" Grid.Row="0" Grid.Column="8"  HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Visi}" ></TextBox>
                    <TextBox  Margin="2"  Grid.Row="1" Grid.Column="8" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[7].Vector}" Visibility="{Binding Visi}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
                    <TextBox  Margin="2"  Grid.Row="2" Grid.Column="8" MinWidth="60" Text="{Binding RtuParaSwitchOutViewModels[7].LoopSum}" Visibility="{Binding Visi}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>


                    <TextBlock Text=" 开关量总数"  MinWidth="90"  Grid.Row="0" Grid.Column="9"   HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>
                    <TextBox  Margin="2"  Grid.Row="2" Grid.Column="9" MinWidth="60" Text="{Binding SumSwitchInLoops}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>

                    <Button Command="{Binding CmdAmpChanged}" Content="确认修改" Grid.Column="10"  VerticalAlignment="Center" Grid.RowSpan="3" Width="65" Height="25"></Button>

                </Grid>

            </GroupBox>
            <CheckBox IsChecked="{Binding IsChecked}" Content="批量操作" Grid.Column="1" VerticalAlignment="Center"  Height="16" Margin="10,70,10,10"></CheckBox>
            <Button Command="{Binding CmdLoopNameChanged}" Content="校正回路名称" Height="25" Margin="10,22,22,51" VerticalAlignment="Center" Grid.Column="1" />
        </Grid>
        <!--telerik:RadGridView ShowGroupPanel="False" AutoGenerateColumns="False" VirtualizingStackPanel.IsVirtualizing="True"
                             RowIndicatorVisibility="Collapsed" Grid.Row="1" 
                                IsReadOnly="False"   AllowDrop="True"
                   ItemsSource="{Binding Path=RtuParaAnalogueAmpViewModels}">
            <telerik:RadGridView.RowStyle>
                <Style TargetType="telerik:GridViewRow">
                    <Setter Property="Background" Value="{Binding Path=BkColors, Mode=OneWay}" />
                    <Setter Property="Template" Value="{DynamicResource GridViewRowTemplate}" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FFAAAAAA"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFAAAAAA"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </telerik:RadGridView.RowStyle>

            <telerik:RadGridView.Columns>

                <telerik:GridViewDataColumn Header="序号" IsFilterable="False" IsSortable="False" DataMemberBinding="{Binding LoopId}" MinWidth="60" >
                       
                    </telerik:GridViewDataColumn>

                    <telerik:GridViewDataColumn Header="回路名称"  MinWidth="60" >
                        <telerik:GridViewDataColumn.CellTemplate>
                            <DataTemplate>

                                <TextBox BorderThickness="0"    VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Text="{Binding LoopName}"></TextBox>

                            </DataTemplate>
                        </telerik:GridViewDataColumn.CellTemplate>
                    </telerik:GridViewDataColumn>
          
                      
                 
                    <telerik:GridViewDataColumn Header="开关量矢量" IsResizable="False" MinWidth="60" >
                        <telerik:GridViewDataColumn.CellTemplate>
                            <DataTemplate>

                            <TextBox BorderThickness="0" VerticalAlignment="Stretch"   HorizontalAlignment="Stretch" Text="{Binding VectorSwitchIn}"></TextBox>

                            </DataTemplate>
                        </telerik:GridViewDataColumn.CellTemplate>
                    </telerik:GridViewDataColumn>
                <telerik:GridViewDataColumn Header="辅助触点" IsResizable="False"  MinWidth="75" >
                        <telerik:GridViewDataColumn.CellTemplate>
                            <DataTemplate>

                            <CheckBox BorderThickness="0" VerticalAlignment="Stretch"  Content="常闭"  HorizontalAlignment="Stretch" IsChecked="{Binding IsSwitchStateClose}"></CheckBox>

                            </DataTemplate>
                        </telerik:GridViewDataColumn.CellTemplate>
                    </telerik:GridViewDataColumn>


                <telerik:GridViewDataColumn Header="跳变报警"  IsResizable="False" MinWidth="75" >
                        <telerik:GridViewDataColumn.CellTemplate>
                            <DataTemplate>

                            <CheckBox BorderThickness="0" VerticalAlignment="Stretch"  Content="报警" HorizontalAlignment="Stretch" IsChecked="{Binding IsAlarmSwitch}"></CheckBox>

                            </DataTemplate>
                        </telerik:GridViewDataColumn.CellTemplate>
                    </telerik:GridViewDataColumn>

                <telerik:GridViewDataColumn Header="模拟量矢量"  IsResizable="False" MinWidth="60" >
                        <telerik:GridViewDataColumn.CellTemplate>
                            <DataTemplate>

                            <TextBox BorderThickness="0" IsEnabled="{Binding IsEnable}"  VerticalAlignment="Stretch"   HorizontalAlignment="Stretch" Text="{Binding VectorMoniliang}"></TextBox>

                            </DataTemplate>
                        </telerik:GridViewDataColumn.CellTemplate>
                    </telerik:GridViewDataColumn>

                <telerik:GridViewDataColumn Header="电流量程"  IsResizable="False" MinWidth="60" >
                    <telerik:GridViewDataColumn.CellTemplate>
                        <DataTemplate>

                            <TextBox BorderThickness="0" IsEnabled="{Binding IsEnable}"  VerticalAlignment="Stretch"   HorizontalAlignment="Stretch" Text="{Binding AmRange}"></TextBox>

                        </DataTemplate>
                    </telerik:GridViewDataColumn.CellTemplate>
                </telerik:GridViewDataColumn>



                <telerik:GridViewDataColumn Header="报警上限"  IsResizable="False" MinWidth="60" >
                        <telerik:GridViewDataColumn.CellTemplate>
                            <DataTemplate>

                            <TextBox BorderThickness="0" IsEnabled="{Binding IsEnable}"  VerticalAlignment="Stretch"   HorizontalAlignment="Stretch" Text="{Binding UpperLimit}"></TextBox>

                            </DataTemplate>
                        </telerik:GridViewDataColumn.CellTemplate>
                    </telerik:GridViewDataColumn>
                <telerik:GridViewDataColumn Header="报警下限"  IsResizable="False" MinWidth="60" >
                        <telerik:GridViewDataColumn.CellTemplate>
                            <DataTemplate>

                            <TextBox BorderThickness="0" IsEnabled="{Binding IsEnable}"  VerticalAlignment="Stretch"   HorizontalAlignment="Stretch" Text="{Binding LowerLimit}"></TextBox>

                            </DataTemplate>
                        </telerik:GridViewDataColumn.CellTemplate>
                    </telerik:GridViewDataColumn>

                <telerik:GridViewDataColumn Header="电压相位"  IsResizable="False" MinWidth="60" >
                    <telerik:GridViewDataColumn.CellTemplate>
                        <DataTemplate>

                            <ComboBox ItemsSource="{Binding CollectionPhase}" SelectedIndex="{Binding SelectPhaseIndex}" DisplayMemberPath="Name"
 IsEnabled="{Binding IsEnable}" 
                                      BorderThickness="0" VerticalAlignment="Stretch"   HorizontalAlignment="Stretch"></ComboBox>

                        </DataTemplate>
                    </telerik:GridViewDataColumn.CellTemplate>
                </telerik:GridViewDataColumn>

                <telerik:GridViewDataColumn Header="互感器比"  IsResizable="False" MinWidth="60" >
                        <telerik:GridViewDataColumn.CellTemplate>
                            <DataTemplate>

                            <TextBox BorderThickness="0" IsEnabled="{Binding IsEnable}" VerticalAlignment="Stretch"   HorizontalAlignment="Stretch" Text="{Binding Range}"></TextBox>

                            </DataTemplate>
                        </telerik:GridViewDataColumn.CellTemplate>
                    </telerik:GridViewDataColumn>
                        
                </telerik:RadGridView.Columns>

                    
                </telerik:RadGridView-->





        <!--<ListView AllowDrop="True" ScrollViewer.VerticalScrollBarVisibility="Visible"  Grid.Row="1"
                  HorizontalAlignment="Left" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
                   ItemsSource="{Binding Path=RtuParaAnalogueAmpViewModels}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Background" Value="{Binding BkColors}" />

                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FFAAAAAA"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFAAAAAA"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                   
                    <VirtualizingStackPanel>
                      
                    </VirtualizingStackPanel>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.View >
                <GridView AllowsColumnReorder="true"  ColumnHeaderToolTip="All Here">


                    <GridViewColumn  Header="序号" Width="60"  DisplayMemberBinding="{Binding LoopId}">
                    </GridViewColumn>

                    <GridViewColumn   Header="回路名称" Width="180">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border Margin="0" Padding="0" BorderThickness="0">
                                <TextBox BorderThickness="0"    VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Text="{Binding LoopName}"></TextBox>
</Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn  Header="开关量矢量" Width="75">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>

                                <Border Margin="0" Padding="0" BorderThickness="0">
                                    <TextBox BorderThickness="0" VerticalAlignment="Stretch"   HorizontalAlignment="Stretch" Text="{Binding VectorSwitchIn}"></TextBox>
</Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn  Header="辅助触点" Width="75">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border Margin="0" Padding="0" BorderThickness="0"><CheckBox BorderThickness="0" VerticalAlignment="Stretch"  Content="常闭"  HorizontalAlignment="Stretch" IsChecked="{Binding IsSwitchStateClose}"></CheckBox>
</Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn  Header="模拟量矢量" Width="75">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border Margin="0" Padding="0" BorderThickness="0">
                                    <TextBox BorderThickness="0" IsEnabled="{Binding IsEnable}"  VerticalAlignment="Stretch"   HorizontalAlignment="Stretch" Text="{Binding VectorMoniliang}"></TextBox>
</Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn  Header="电流量程" Width="180">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border Margin="0" Padding="0" BorderThickness="0"><TextBox BorderThickness="0" IsEnabled="{Binding IsEnable}"  VerticalAlignment="Stretch"   HorizontalAlignment="Stretch" Text="{Binding AmRange}"></TextBox>
</Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn  Header="报警上限" Width="75">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border Margin="0" Padding="0" BorderThickness="0">
                                    <TextBox BorderThickness="0" IsEnabled="{Binding IsEnable}"  VerticalAlignment="Stretch"   HorizontalAlignment="Stretch" Text="{Binding UpperLimit}"></TextBox>
</Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>

                    </GridViewColumn>

                    <GridViewColumn  Header="电压相位" Width="75">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border Margin="0" Padding="0" BorderThickness="0">
                                    <ComboBox ItemsSource="{Binding CollectionPhase}" SelectedIndex="{Binding SelectPhaseIndex}" DisplayMemberPath="Name"
 IsEnabled="{Binding IsEnable}" 
                                      BorderThickness="0" VerticalAlignment="Stretch"   HorizontalAlignment="Stretch"></ComboBox>
</Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>

                    </GridViewColumn>

                    <GridViewColumn  Header="互感器比" Width="75">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border Margin="0" Padding="0" BorderThickness="0">
                                    <TextBox BorderThickness="0" IsEnabled="{Binding IsEnable}" VerticalAlignment="Stretch"   HorizontalAlignment="Stretch" Text="{Binding Range}"></TextBox>
                                </Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>

                    </GridViewColumn>


                </GridView>
            </ListView.View>
        </ListView>-->



      
        <!--<ListView AllowDrop="True" ScrollViewer.VerticalScrollBarVisibility="Visible"  Grid.Row="1"
                  HorizontalAlignment="Left" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
                   ItemsSource="{Binding Path=RtuParaAnalogueAmpViewModels}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Background" Value="{Binding BkColors}" />

                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FFAAAAAA"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFAAAAAA"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View >
                <GridView AllowsColumnReorder="true"  ColumnHeaderToolTip="All Here">


                    <GridViewColumn  Header="序号" Width="60"  DisplayMemberBinding="{Binding LoopId}">
                    </GridViewColumn>

                    <GridViewColumn   Header="回路名称"  DisplayMemberBinding="{Binding LoopName}" Width="180">
                    </GridViewColumn>
                    <GridViewColumn  Header="开关量矢量" DisplayMemberBinding="{Binding VectorSwitchIn}" Width="75">
 
                    </GridViewColumn>
                    <GridViewColumn  Header="辅助触点" DisplayMemberBinding="{Binding IsSwitchStateClose}" Width="75">
                    </GridViewColumn>
                    <GridViewColumn  Header="模拟量矢量" DisplayMemberBinding="{Binding VectorMoniliang}" Width="75">
                    </GridViewColumn>
                    <GridViewColumn  Header="电流量程" DisplayMemberBinding="{Binding AmRange}" Width="180">
                    </GridViewColumn>
                    <GridViewColumn  Header="报警上限" DisplayMemberBinding="{Binding UpperLimit}" Width="75">

                    </GridViewColumn>

                    <GridViewColumn  Header="电压相位" DisplayMemberBinding="{Binding SelectPhaseIndex}" Width="75">

                    </GridViewColumn>

                    <GridViewColumn  Header="互感器比" DisplayMemberBinding="{Binding Range}" Width="75">

                    </GridViewColumn>


                </GridView>
            </ListView.View>
        </ListView>-->





            <DataGrid AutoGenerateColumns="False"  Background="Transparent"  
								  ItemsSource="{Binding RtuParaAnalogueAmpViewModels}"  
    BorderThickness="0" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
								  HorizontalAlignment="Left" 
							
                                 Grid.Row="1" 
								  CanUserReorderColumns="False" SelectionChanged="DataGrid_SelectionChanged">

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="{Binding Path=BkColors, Mode=OneWay}" />

                        <!--<Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FFAAAAAA"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFAAAAAA"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>-->
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.Columns>
                    <DataGridTextColumn  Header="序号" Binding="{Binding LoopId}" IsReadOnly="True" Width="40"/>
                    <DataGridTextColumn  Header="回路名称" Binding="{Binding LoopName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Width="120"/>
                <DataGridTextColumn  Header="开关量矢量"  Binding="{Binding VectorSwitchIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Width="80" >
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTipService.ToolTip"  Value="对应终端输出回路" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                    
                        <DataGridTemplateColumn Header="辅助触点" Width="65">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <!--<CheckBox BorderThickness="0"   Margin="1,1,0,1"  Content="常闭"  IsChecked="{Binding IsSwitchStateClose,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>-->
                            <ComboBox DisplayMemberPath="Name"   ItemsSource="{Binding IsSwitchStateCloseItem}" SelectedIndex="{Binding IsSwitchStateCloseSelectIndex,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  /> <!--SelectedItem="{Binding IsSwitchStateCloseSelectItem,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
                        </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="跳变报警" Width="70">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <!--<CheckBox BorderThickness="0" Margin="1,1,0,1"   Content="报警"  IsChecked="{Binding IsAlarmSwitch,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>-->
                            <ComboBox DisplayMemberPath="Name"   ItemsSource="{Binding IsAlarmSwitchItem}" SelectedIndex="{Binding  IsAlarmSwitchSelectIndex,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  /> <!--SelectedItem="{Binding IsAlarmSwitchSelectItem,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->

                        </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--<DataGridTextColumn  Header="模拟量矢量" Binding="{Binding VectorMoniliang, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Width="75"/>-->
                <DataGridTemplateColumn Header="电流矢量" Width="65">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                            <TextBox BorderThickness="0" IsEnabled="{Binding IsEnable}" Foreground="{Binding ForegroundColors}"   Text="{Binding VectorMoniliang,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Header="电流量程" Binding="{Binding AmRange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsEnable}"  Width="75"/>-->
                <DataGridTemplateColumn Header="电流量程" Width="65">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                            <TextBox BorderThickness="0" IsEnabled="{Binding IsLineEnable}" Foreground="{Binding ForegroundColors}" Text="{Binding AmRange,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"  MaxLength="4"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Header="报警上限" Binding="{Binding UpperLimit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="{Binding IsEnable}"   Width="75"/>-->
                <DataGridTemplateColumn Header="报警上限" Width="65">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                            <TextBox BorderThickness="0" IsEnabled="{Binding IsEnable}" Foreground="{Binding ForegroundColors}" Text="{Binding UpperLimit,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="3"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Header="报警下限" Binding="{Binding LowerLimit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="{Binding IsEnable}"   Width="75"/>-->
                <DataGridTemplateColumn Header="报警下限" Width="65">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                            <TextBox BorderThickness="0" IsEnabled="{Binding IsEnable}" Foreground="{Binding ForegroundColors}" Text="{Binding LowerLimit,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="3"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>


                <DataGridTemplateColumn Header="电压相位" Width="65">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                            <ComboBox ItemsSource="{Binding CollectionPhase}" Foreground="{Binding ForegroundColors}" SelectedIndex="{Binding SelectPhaseIndex,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Name" IsEnabled="{Binding IsEnable}" 
                                      BorderThickness="0" ></ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>


                    <!--<DataGridTextColumn Header="互感器比"  Binding="{Binding Range, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="75" IsReadOnly="{Binding IsEnable}"  >
                </DataGridTextColumn>-->
                <DataGridTemplateColumn Header="互感器比" Width="65">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                            <DockPanel >
                                <TextBox BorderThickness="0" MaxLength="4" Foreground="{Binding ForegroundColors}" IsEnabled="{Binding IsEnable}" Width="40" Text="{Binding Range,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"></TextBox>
                                <TextBlock Text="/5 " Margin="0,2,0,0"   HorizontalAlignment="Right"/>
                            </DockPanel >
                        </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="屏蔽小电流" Width="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox BorderThickness="0" MaxLength="8" IsEnabled="{Binding IsEnable}" Foreground="{Binding ForegroundColors}" Text="{Binding IsShieldLittleA,Mode=TwoWay, UpdateSourceTrigger=LostFocus}" ToolTip="仅保留一位小数"></TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="屏蔽回路" Width="70">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox DisplayMemberPath="Name" IsEnabled="{Binding IsEnable}" Foreground="{Binding ForegroundColors}" ItemsSource="{Binding IsShieldLoopItem}" SelectedIndex="{Binding IsShieldLoopSelectIndex,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   /> <!--SelectedItem="{Binding IsShieldLoopSelectItem,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--<DataGridTemplateColumn Header="门控输出" Width="65" Visibility="{Binding TmlInformationViewModel.IsShowLineHM}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox BorderThickness="0"  IsEnabled="{Binding IsLineEnable}"  Text="{Binding AmRange,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"  MaxLength="4"></TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->




            </DataGrid.Columns>

            </DataGrid>

    </Grid>
</UserControl>
