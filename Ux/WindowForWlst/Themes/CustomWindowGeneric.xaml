<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
    xmlns:WindowForWlst="clr-namespace:WindowForWlst"
    xmlns:AppleWindowSet="clr-namespace:Elysium.ThemesSet.AppleWindowSet;assembly=Elysium">
    <!--标题栏中窗体控制按钮模板-->
    <ControlTemplate x:Key="CaptionButtonTemplate" TargetType="{x:Type WindowForWlst:CaptionButton}">
        <Grid Height="20">
            <Border x:Name="ButtonBackground" 
                CornerRadius="{Binding Path=CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" 
                Opacity="1" BorderThickness="0" Background="{TemplateBinding Background}">
                <Border>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.6">
                            <GradientStop Color="#77ffffff" Offset="0"/>
                            <GradientStop Color="#11ffffff" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
            </Border>

            <Border x:Name="ButtonEdgesBorder" 
              CornerRadius="{Binding Path=CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" 
              Opacity="1" BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}">
                <Border.BitmapEffect>
                    <DropShadowBitmapEffect Color="White" Direction="270" ShadowDepth=".75" Softness="0.20"/>
                </Border.BitmapEffect>
            </Border>

            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ButtonBackground" Property="Background" 
                Value="{Binding Path=HoverBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ButtonBackground" Property="Background" Value="#B2A7A6A2"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--标题栏中窗体控制按钮的基本样式-->
    <Style TargetType="{x:Type WindowForWlst:CaptionButton}" x:Key="CaptionButtonStyle">
        <Setter Property="Background" Value="#00810606"/>
        <Setter Property="HoverBackground" Value="#B29EC2E9"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Lucida Console" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20" />
        <Setter Property="shell:WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template" Value="{StaticResource CaptionButtonTemplate}" />
    </Style>

    <!--标题栏中帮助按钮样式-->
    <Style TargetType="{x:Type WindowForWlst:HelpButton}" BasedOn="{StaticResource CaptionButtonStyle}" x:Shared="False">
        <Setter Property="BorderThickness" Value="1,1,0,1"/>
        <Setter Property="CornerRadius" Value="0,0,0,4"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Lucida Console" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Content" Value="?"/>
    </Style>

    <!--标题栏中最小化按钮样式-->
    <Style TargetType="{x:Type WindowForWlst:MinimizeButton}" BasedOn="{StaticResource CaptionButtonStyle}" x:Shared="False" >
        <Setter Property="Button.Content">
            <Setter.Value>
                <Image Source="/WindowForWlst;component/Images/minimize.jpg" Width="12" Margin="0,4,0,0" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="CornerRadius" Value="0,0,4,0"/>
    </Style>

    <!--标题栏中最大化按钮样式-->
    <Style TargetType="{x:Type WindowForWlst:MaximizeButton}" BasedOn="{StaticResource CaptionButtonStyle}" x:Shared="False">
        <Setter Property="BorderThickness" Value="0,1,0,1"/>
        <Setter Property="Content">
            <Setter.Value>
                <Grid>
                    <Image Source="/WindowForWlst;component/Images/maximize.png" Width="12">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WindowState,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type WindowForWlst:CustomChromeWindow}}}" Value="Maximized">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Image Source="/WindowForWlst;component/Images/restore.png" Width="12">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WindowState,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type WindowForWlst:CustomChromeWindow}}}" Value="Maximized">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Grid>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="IsEnabled" Value="False" />-->
    </Style>

    <!--标题栏中关闭按钮样式-->
    <Style TargetType="{x:Type WindowForWlst:CloseButton}" BasedOn="{StaticResource CaptionButtonStyle}" x:Shared="False">
        <Setter Property="Background" Value="#889F7472"/>
        <Setter Property="HoverBackground" Value="#B2E55F59"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Margin" Value="2,0,0,0"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="CornerRadius" Value="0,0,0,4"/>
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="/WindowForWlst;component/Images/close.png" Width="11"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--标题栏中锁定窗口按钮样式-->
    <Style TargetType="{x:Type WindowForWlst:TopmostButton}" BasedOn="{StaticResource CaptionButtonStyle}" x:Shared="False">
        <Setter Property="BorderThickness" Value="0,1,0,1"/>
        <!--<Setter Property="Visibility" Value="{Binding TopmostButtonVisibility}"/>-->
        <!--<Setter Property="Content">
            <Setter.Value>
                <Grid>
                    <Image Source="/WindowForWlst;component/Images/maximize.png" Width="12">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Topmost}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Image Source="/WindowForWlst;component/Images/minimize.jpg" Width="12">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Topmost}" Value="False">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Grid>
            </Setter.Value>
        </Setter>-->
    </Style>
    
    <!-- 默认的自定义窗体样式 -->
    <Style TargetType="{x:Type WindowForWlst:CustomChromeWindow}" x:Shared="False">
        <!--允许透明窗体-->
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Margin" Value="4,4,4,42"/>
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(AppleWindowSet:AppleWindowAttriXaml.BorderBrush), Mode=OneWay}"/>
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(AppleWindowSet:AppleWindowAttriXaml.BorderThickness), Mode=OneWay}"/>
        <Setter Property="WindowStyle" Value="None"/>
        <!--设置WindowChrome样式
    注意事项：1、此处CaptionHeight绑定到自定义窗体的CaptionHeight依赖项属性，CaptionHeight在

CustomChromeWindow.cs中定义
                 要支持绑定并能够在xaml中使用，CaptionHeight必须定义为依赖项属性
              2、CornerRadius绑定到基类Window的CornerRadius属性
              3、在附加属性中，不能直接绑定CaptionHeight或绑定到TemplatedParent，而应该绑定到

RelativeSource FindAncestor
                 也就是绑定到WindowChrome的CustomChromeWindow类型父对象
    -->
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
            ResizeBorderThickness="6"
            CaptionHeight="{Binding CaptionHeight,
                           RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type WindowForWlst:CustomChromeWindow}}}"
            CornerRadius="{Binding CornerRadius,
                           RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type WindowForWlst:CustomChromeWindow}}}"
            GlassFrameThickness="1"                    >    
                </shell:WindowChrome>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type WindowForWlst:CustomChromeWindow}">
                    <Grid>
                        <!-- 窗体边框的厚度和圆角弧度绑定到模板父窗体的对应属性,CornerRadius与WindowChrome样式对

应-->
                        <Border BorderThickness="{Binding RelativeSource={RelativeSource Self}, Path=(AppleWindowSet:AppleWindowAttriXaml.BorderThickness), Mode=OneWay}" Margin="{TemplateBinding Margin}" 
                    Background="{Binding RelativeSource={RelativeSource Self}, Path=(AppleWindowSet:AppleWindowAttriXaml.Background), Mode=OneWay}"
                    CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{Binding RelativeSource={RelativeSource Self}, Path=(AppleWindowSet:AppleWindowAttriXaml.BorderBrush), Mode=OneWay}">
                            <!--<Border.Background>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,30" MappingMode="Absolute">
                      <GradientStop Offset="0" Color="#AA1F2331"/>
                      <GradientStop Offset="1" Color="#EE5382CE"/>
                  </LinearGradientBrush>
              </Border.Background>-->
                            <DockPanel>
                                <!--标题栏高度CaptionHeight与WindowChrome样式对应-->
                                <Grid x:Name="WindowHeader" Height="{TemplateBinding CaptionHeight}" 
                            DockPanel.Dock="Top"   
                      Background="{Binding RelativeSource={RelativeSource Self}, Path=(AppleWindowSet:AppleWindowAttriXaml.HeaderBrush), Mode=OneWay}">
                                    <!-- 窗体Icon按钮，绑定到基类Window的Icon属性，
                       点击Icon会显示系统菜单，触发点击通过绑定路由命令ShowSystemMenuCommand实现
                       这里绑定到TemplatedParent的Icon属性与TemplateBinding一样的效果，区别是后者是

OneWay绑定-->
                                    <!--<Button Width="24" Height="24" Style="{x:Null}" BorderBrush="{x:Null}" 
                              HorizontalAlignment="Left" VerticalAlignment="Center" 

Background="{x:Null}"
                              shell:WindowChrome.IsHitTestVisibleInChrome="True"  Focusable="False"
                              Command="{x:Static shell:SystemCommands.ShowSystemMenuCommand}"  >
                                    
                          <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent}, 

Path=Icon}" 
                                  Width="16" Height="16"
                                  shell:WindowChrome.IsHitTestVisibleInChrome="True"/>
                      </Button>-->
                                    <!--标题文字，绑定到模板父窗体的Title属性--><!--Text="{Binding TitleCetc}"-->
                                    <TextBlock x:Name="TitleTextBlock" VerticalAlignment="Center" HorizontalAlignment="Center"
                                               Foreground="{Binding RelativeSource={RelativeSource Self}, Path=(AppleWindowSet:AppleWindowAttriXaml.Foreground), Mode=OneWay}">
                      	<TextBlock.Effect>
                      		<DropShadowEffect Color="White" Direction="0" ShadowDepth="0" BlurRadius="20"/>
                        </TextBlock.Effect>
                                    </TextBlock>

                                </Grid>
                                <!--如果你在ErrorTemplate中使用AdornedElementPlaceholder，那么必须加上这个装饰器，
                   否则你很难找到出问题的原因所在，这也很多人使用自定义窗体最困惑的地方-->
                                <AdornerDecorator>
                                    <ContentPresenter />
                                </AdornerDecorator>
                            </DockPanel>
                        </Border>
                        <!--窗体控制按钮-->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5">
                            <WindowForWlst:TopmostButton x:Name="TopmostButton"/>
                            <WindowForWlst:MinimizeButton x:Name="minimizeButton"/>
                            <WindowForWlst:MaximizeButton x:Name="MaximizeButton"/>
                            <WindowForWlst:CloseButton x:Name="closeButton" Command="{x:Static shell:SystemCommands.CloseWindowCommand}"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="MaximizeButton" Property="IsEnabled" Value="False"/>
                        </Trigger>
                            <DataTrigger Binding="{Binding WindowState,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type WindowForWlst:CustomChromeWindow}}}" Value="Maximized">
                                <Setter Property="Margin" Value="2"/>
                            </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
