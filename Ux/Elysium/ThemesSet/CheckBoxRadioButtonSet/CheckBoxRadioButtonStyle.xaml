<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:params="clr-namespace:Elysium.Parameters" xmlns:primitives="clr-namespace:Elysium.Controls.Primitives" xmlns:controls="clr-namespace:Elysium.Controls" xmlns:converters="clr-namespace:Elysium.Converters"
                   
                       xmlns:telerik="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
    xmlns:telerikNavigation="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Navigation"
    xmlns:telerikNavigationPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls.Navigation"
    xmlns:telerikChromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls"
                    xmlns:Common="clr-namespace:Elysium.ThemesSet.Common"
                    xmlns:CheckBoxRadioButtonSet="clr-namespace:Elysium.ThemesSet.CheckBoxRadioButtonSet"
                    xmlns:FontSet="clr-namespace:Elysium.ThemesSet.FontSet">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Elysium;component/Themes/Brushes.xaml" />
        <ResourceDictionary Source="/Elysium;component/Themes/LightBrushes.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/ButtonSet/ButtonStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <converters:DoubleToGridLengthConverter x:Key="DoubleToGridLengthConverter" />
    <converters:DoubleToThicknessConverter x:Key="DoubleToThicknessConverter" />
    <converters:GridLengthToDoubleConverter x:Key="GridLengthToDoubleConverter" />
    <converters:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter" />
    <converters:PercentToAngleConverter x:Key="PercentToAngleConverter" />
    <converters:AngleToCoordinateConverter x:Key="AngleToCoordinateConverter" />
    <converters:NumberPositiveToNegativeConverter x:Key="NumberPositiveToNegativeConverter" />
    <converters:ThicknessPositiveToNegativeConverter x:Key="ThicknessPositiveToNegativeConverter" />
    <converters:ThicknessConverter x:Key="ThicknessConverter" />
    <converters:TabItemNameConverter x:Key="myTabItemNameConverter" />
    <converters:IsGreaterThanConverter x:Key="IsGreaterThanConverter" />
    <Style x:Key="FocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="{TemplateBinding params:General.DefaultPadding}" Stroke="{StaticResource ForegroundBrush}" StrokeThickness="{TemplateBinding params:General.DefaultThicknessValue}" StrokeDashArray="2 1" RenderOptions.EdgeMode="Aliased" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.NormalBackgrounBrush), Mode=OneWay}" />
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.NormalBorderBrush), Mode=OneWay}" />
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.BorderThickness), Mode=OneWay}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.NormalForegroundBrush), Mode=OneWay}" />
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontSize), Mode=OneWay}" />
        <Setter Property="FontStretch" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontStretch), Mode=OneWay}" />
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontFamily), Mode=OneWay}" />
        <Setter Property="FontStyle" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontStyle), Mode=OneWay}" />
        <Setter Property="FontWeight" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontWeight), Mode=OneWay}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Left}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="{StaticResource TransparentBrush}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontWeight="{TemplateBinding FontWeight}" FlowDirection="{TemplateBinding FlowDirection}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <BulletDecorator.Bullet>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding params:Bullet.DecoratorSize}" Height="{TemplateBinding params:Bullet.DecoratorSize}">
                                <Grid >
                                    <Path x:Name="CheckBullet" Stroke="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.PressedForegroundBrush), Mode=OneWay}" 
                                          StrokeThickness="{TemplateBinding params:General.BoldThicknessValue}" 
                                          Stretch="Fill" Visibility="Collapsed" Width="{TemplateBinding params:CheckBox.CheckSize}" Height="{TemplateBinding params:CheckBox.CheckSize}">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <LineGeometry StartPoint="0,3" EndPoint="4,8" />
                                                <LineGeometry StartPoint="4,8" EndPoint="8,0" />
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                    <Path x:Name="IndeterminateBullet" Fill="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.PressedForegroundBrush), Mode=OneWay}" StrokeThickness="0" Stretch="Fill" Visibility="Collapsed" Margin="2" Width="{TemplateBinding params:Bullet.Size}" Height="{TemplateBinding params:Bullet.Size}">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="0,0,1,1" />
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <Border Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:General.BoldPaddingValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Left}">
                            <ContentPresenter  Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                        </Border>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckBullet" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckBullet" Property="Path.Stroke" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.DisableBackgroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="CheckBullet" Property="Visibility" Value="Visible" />
                                <Setter TargetName="CheckBullet" Property="Path.Stroke" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.PressedForegroundBrush), Mode=OneWay}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.MouseOverBackgroundBrush), Mode=OneWay}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.MouseOverBorderBrush), Mode=OneWay}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.MouseOverForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.PressedBackgroundBrush), Mode=OneWay}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.PressedBorderBrush), Mode=OneWay}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.PressedForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.DisableBackgroundBrush), Mode=OneWay}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.DisableBorderBrush), Mode=OneWay}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.DisableForegroundBrush), Mode=OneWay}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.NormalBackgrounBrush), Mode=OneWay}" />
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.NormalBorderBrush), Mode=OneWay}" />
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.BorderThickness), Mode=OneWay}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.NormalForegroundBrush), Mode=OneWay}" />
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontSize), Mode=OneWay}" />

        <Setter Property="FontStretch" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontStretch), Mode=OneWay}" />
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontFamily), Mode=OneWay}" />
        <Setter Property="FontStyle" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontStyle), Mode=OneWay}" />
        <Setter Property="FontWeight" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontWeight), Mode=OneWay}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Left}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="{StaticResource TransparentBrush}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontWeight="{TemplateBinding FontWeight}" FlowDirection="{TemplateBinding FlowDirection}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <BulletDecorator.Bullet>
                            <Grid Width="{TemplateBinding params:Bullet.DecoratorSize}" Height="{TemplateBinding params:Bullet.DecoratorSize}">
                                <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Mode=OneWay, Converter={StaticResource ThicknessToDoubleConverter}}" />
                                <Ellipse x:Name="CheckBullet" Fill="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.PressedForegroundBrush), Mode=OneWay}" StrokeThickness="0" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center" Width="{TemplateBinding params:Bullet.Size}" Height="{TemplateBinding params:Bullet.Size}"></Ellipse>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <Border Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:General.BoldPaddingValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Left}">
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                        </Border>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckBullet" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckBullet" Property="Ellipse.Fill" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.DisableBackgroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="CheckBullet" Property="Visibility" Value="Visible" />
                                <Setter TargetName="CheckBullet" Property="Ellipse.Fill" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.PressedForegroundBrush), Mode=OneWay}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.MouseOverBackgroundBrush), Mode=OneWay}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.MouseOverBorderBrush), Mode=OneWay}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.MouseOverForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.PressedBackgroundBrush), Mode=OneWay}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.PressedBorderBrush), Mode=OneWay}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.PressedForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.DisableBackgroundBrush), Mode=OneWay}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.DisableBorderBrush), Mode=OneWay}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(CheckBoxRadioButtonSet:CheckBoxRadioButtonXaml.DisableForegroundBrush), Mode=OneWay}" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>