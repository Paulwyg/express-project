<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:params="clr-namespace:Elysium.Parameters" xmlns:primitives="clr-namespace:Elysium.Controls.Primitives" xmlns:controls="clr-namespace:Elysium.Controls" xmlns:converters="clr-namespace:Elysium.Converters"
                   
                       xmlns:telerik="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
    xmlns:telerikNavigation="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Navigation"
    xmlns:telerikNavigationPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls.Navigation"
    xmlns:telerikChromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls"
  >
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/Elysium;component/Themes/Brushes.xaml" />
    <ResourceDictionary Source="/Elysium;component/Themes/LightBrushes.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/ButtonSet/ButtonStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/CheckBoxRadioButtonSet/CheckBoxRadioButtonStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/TextBoxsSet/TextBoxsStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/TabSet/TabStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/ComboBoxListBoxSet/ComboBoxListBoxStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/ScrollSet/ScrollBarStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/ScrollViewSet/MacScrollViewer.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/MenuSet/MacMenuStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/ListViewSet/ListViewStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/ListViewSet/ListViewStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/DataGridSet/DataGridStyle2.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/DatePickerSet/DatePickerStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/RadGridViewSet/RadGridViewStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/RadTreeViewSet/RadTreeViewStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/LabelSet/LabelStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/TextBlockSet/TextBlockStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/GroupBoxSet/GroupBoxStyle.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/RadPager/RadDataPager_Style.xaml" />
    </ResourceDictionary.MergedDictionaries>
  <converters:DoubleToGridLengthConverter x:Key="DoubleToGridLengthConverter" />
  <converters:DoubleToThicknessConverter x:Key="DoubleToThicknessConverter" />
  <converters:GridLengthToDoubleConverter x:Key="GridLengthToDoubleConverter" />
  <converters:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter" />
  <converters:PercentToAngleConverter x:Key="PercentToAngleConverter" />
  <converters:AngleToCoordinateConverter x:Key="AngleToCoordinateConverter" />
  <converters:NumberPositiveToNegativeConverter x:Key="NumberPositiveToNegativeConverter" />
  <converters:ThicknessPositiveToNegativeConverter x:Key="ThicknessPositiveToNegativeConverter" />
  <converters:ThicknessConverter x:Key="ThicknessConverter" />
    <converters:TabItemNameConverter x:Key="myTabItemNameConverter" />
  <converters:IsGreaterThanConverter x:Key="IsGreaterThanConverter" />
  <Style x:Key="FocusVisualStyle">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="{TemplateBinding params:General.DefaultPadding}" Stroke="{StaticResource ForegroundBrush}" StrokeThickness="{TemplateBinding params:General.DefaultThicknessValue}" StrokeDashArray="2 1" RenderOptions.EdgeMode="Aliased" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <GeometryGroup x:Key="AdvancedIcon">
    <EllipseGeometry Center="3,3" RadiusX="2.5" RadiusY="2.5" />
    <EllipseGeometry Center="12,3" RadiusX="2.5" RadiusY="2.5" />
    <EllipseGeometry Center="21,3" RadiusX="2.5" RadiusY="2.5" />
  </GeometryGroup>
  <GeometryGroup x:Key="MinimizeIcon" FillRule="EvenOdd">
    <RectangleGeometry Rect="0,0,10,10" />
    <RectangleGeometry Rect="0,0,10,7" />
  </GeometryGroup>
  <GeometryGroup x:Key="MaximizeIcon">
    <LineGeometry StartPoint="0,0.5" EndPoint="10,0.5" />
    <LineGeometry StartPoint="0,1.5" EndPoint="10,1.5" />
    <LineGeometry StartPoint="0,2.5" EndPoint="10,2.5" />
    <LineGeometry StartPoint="0.5,3" EndPoint="0.5,10" />
    <LineGeometry StartPoint="9.5,3" EndPoint="9.5,10" />
    <LineGeometry StartPoint="1,9.5" EndPoint="9,9.5" />
  </GeometryGroup>
  <GeometryGroup x:Key="RestoreIcon">
    <LineGeometry StartPoint="3,0.5" EndPoint="10,0.5" />
    <LineGeometry StartPoint="3,1.5" EndPoint="10,1.5" />
    <LineGeometry StartPoint="3.5,2" EndPoint="3.5,3" />
    <LineGeometry StartPoint="9.5,2" EndPoint="9.5,7" />
    <LineGeometry StartPoint="7,6.5" EndPoint="10,6.5" />
    <LineGeometry StartPoint="0,3.5" EndPoint="7,3.5" />
    <LineGeometry StartPoint="0,4.5" EndPoint="7,4.5" />
    <LineGeometry StartPoint="0.5,5" EndPoint="0.5,10" />
    <LineGeometry StartPoint="6.5,5" EndPoint="6.5,10" />
    <LineGeometry StartPoint="1,9.5" EndPoint="6,9.5" />
  </GeometryGroup>
  <GeometryGroup x:Key="CloseIcon">
    <LineGeometry StartPoint="1.5,0.5" EndPoint="9.5,8.5" />
    <LineGeometry StartPoint="0.5,1.5" EndPoint="8.5,9.5" />
    <LineGeometry StartPoint="1.5,1.5" EndPoint="8.5,8.5" />
    <LineGeometry StartPoint="8.5,0.5" EndPoint="0.5,8.5" />
    <LineGeometry StartPoint="9.5,1.5" EndPoint="1.5,9.5" />
    <LineGeometry StartPoint="8.5,1.5" EndPoint="1.5,8.5" />
  </GeometryGroup>

    
    
    
 
  <ControlTemplate x:Key="HorizontalProgressBarTemplate" TargetType="{x:Type controls:ProgressBar}">
    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
      <Canvas x:Name="PART_Track">
        <Rectangle x:Name="PART_Indicator" Fill="{TemplateBinding Foreground}" StrokeThickness="0" Canvas.Left="0" Canvas.Top="0" Width="{Binding ElementName=PART_Track, Path=ActualWidth}" Height="{Binding ElementName=PART_Track, Path=ActualHeight}">
          <Rectangle.LayoutTransform>
            <ScaleTransform ScaleX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Percent}" />
          </Rectangle.LayoutTransform>
        </Rectangle>
        <Canvas x:Name="PART_BusyBar" Canvas.Left="0" Canvas.Top="0" Visibility="Hidden">
          <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:Progress.BusyElementSize), Converter={StaticResource NumberPositiveToNegativeConverter}}" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}" />
          <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:Progress.BusyElementSize), Converter={StaticResource NumberPositiveToNegativeConverter}}" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}" />
          <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:Progress.BusyElementSize), Converter={StaticResource NumberPositiveToNegativeConverter}}" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}" />
          <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:Progress.BusyElementSize), Converter={StaticResource NumberPositiveToNegativeConverter}}" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}" />
          <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:Progress.BusyElementSize), Converter={StaticResource NumberPositiveToNegativeConverter}}" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}" />
        </Canvas>
      </Canvas>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="Indeterminate" />
          <Condition Property="IsEnabled" Value="True" />
        </MultiTrigger.Conditions>
        <MultiTrigger.Setters>
          <Setter TargetName="PART_Indicator" Property="Canvas.Left" Value="{Binding ElementName=PART_Indicator, Path=ActualWidth, Converter={StaticResource NumberPositiveToNegativeConverter}}" />
          <Setter TargetName="PART_Indicator" Property="LayoutTransform">
            <Setter.Value>
              <ScaleTransform ScaleX="0.4" />
            </Setter.Value>
          </Setter>
        </MultiTrigger.Setters>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="Busy" />
          <Condition Property="IsEnabled" Value="True" />
        </MultiTrigger.Conditions>
        <MultiTrigger.Setters>
          <Setter TargetName="PART_Indicator" Property="Visibility" Value="Hidden" />
          <Setter TargetName="PART_BusyBar" Property="Visibility" Value="Visible" />
        </MultiTrigger.Setters>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="VerticalProgressBarTemplate" TargetType="{x:Type controls:ProgressBar}">
    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
      <Canvas x:Name="PART_Track" RenderTransformOrigin="0.5,0.5">
        <Canvas.RenderTransform>
          <ScaleTransform ScaleY="-1" />
        </Canvas.RenderTransform>
        <Rectangle x:Name="PART_Indicator" Fill="{TemplateBinding Foreground}" StrokeThickness="0" Canvas.Left="0" Canvas.Top="0" Width="{Binding ElementName=PART_Track, Path=ActualWidth}" Height="{Binding ElementName=PART_Track, Path=ActualHeight}">
          <Rectangle.LayoutTransform>
            <ScaleTransform ScaleY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Percent}" />
          </Rectangle.LayoutTransform>
        </Rectangle>
        <Canvas x:Name="PART_BusyBar" Canvas.Left="0" Canvas.Top="0" Visibility="Hidden">
          <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:Progress.BusyElementSize), Converter={StaticResource NumberPositiveToNegativeConverter}}" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}" />
          <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:Progress.BusyElementSize), Converter={StaticResource NumberPositiveToNegativeConverter}}" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}" />
          <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:Progress.BusyElementSize), Converter={StaticResource NumberPositiveToNegativeConverter}}" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}" />
          <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:Progress.BusyElementSize), Converter={StaticResource NumberPositiveToNegativeConverter}}" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}" />
          <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:Progress.BusyElementSize), Converter={StaticResource NumberPositiveToNegativeConverter}}" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}" />
        </Canvas>
      </Canvas>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="Indeterminate" />
          <Condition Property="IsEnabled" Value="True" />
        </MultiTrigger.Conditions>
        <MultiTrigger.Setters>
          <Setter TargetName="PART_Indicator" Property="Canvas.Top" Value="{Binding ElementName=PART_Indicator, Path=ActualHeight, Converter={StaticResource NumberPositiveToNegativeConverter}}" />
          <Setter TargetName="PART_Indicator" Property="LayoutTransform">
            <Setter.Value>
              <ScaleTransform ScaleY="0.4" />
            </Setter.Value>
          </Setter>
        </MultiTrigger.Setters>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="Busy" />
          <Condition Property="IsEnabled" Value="True" />
        </MultiTrigger.Conditions>
        <MultiTrigger.Setters>
          <Setter TargetName="PART_Indicator" Property="Visibility" Value="Hidden" />
          <Setter TargetName="PART_BusyBar" Property="Visibility" Value="Visible" />
        </MultiTrigger.Setters>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type controls:ProgressBar}" TargetType="{x:Type controls:ProgressBar}">
    <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource MiddleLightBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Style.Triggers>
      <Trigger Property="State" Value="Busy">
        <Setter Property="Background" Value="{x:Null}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{StaticResource DisabledBrush}" />
      </Trigger>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="MinHeight" Value="2" />
        <Setter Property="Height" Value="4" />
        <Setter Property="MaxHeight" Value="8" />
        <Setter Property="Template" Value="{StaticResource HorizontalProgressBarTemplate}" />
      </Trigger>
      <Trigger Property="Orientation" Value="Vertical">
        <Setter Property="MinWidth" Value="2" />
        <Setter Property="Width" Value="4" />
        <Setter Property="MaxWidth" Value="8" />
        <Setter Property="Template" Value="{StaticResource VerticalProgressBarTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type controls:ProgressRing}" TargetType="{x:Type controls:ProgressRing}">
    <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}" />
    <Setter Property="BorderThickness" Value="3" />
    <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:ProgressRing}">
          <Border ClipToBounds="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Canvas x:Name="PART_Track" RenderTransformOrigin="0.5,0.5">
              <Canvas.RenderTransform>
                <RotateTransform Angle="90" />
              </Canvas.RenderTransform>
              <ed:Arc x:Name="BackgroundArc" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessToDoubleConverter}}" StartAngle="0" EndAngle="360" Stretch="None" RenderTransformOrigin="0.5,0.5" Canvas.Left="0" Canvas.Top="0" Panel.ZIndex="0" Width="{Binding ElementName=PART_Track, Path=ActualWidth}" Height="{Binding ElementName=PART_Track, Path=ActualHeight}">
                <ed:Arc.RenderTransform>
                  <RotateTransform Angle="-90" />
                </ed:Arc.RenderTransform>
              </ed:Arc>
              <ed:Arc x:Name="PART_Arc" Stroke="{TemplateBinding Foreground}" StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessToDoubleConverter}}" StartAngle="0" EndAngle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Percent, Converter={StaticResource PercentToAngleConverter}}" Stretch="None" RenderTransformOrigin="0.5,0.5" Canvas.Left="0" Canvas.Top="0" Panel.ZIndex="1" Width="{Binding ElementName=PART_Track, Path=ActualWidth}" Height="{Binding ElementName=PART_Track, Path=ActualHeight}">
                <ed:Arc.RenderTransform>
                  <RotateTransform Angle="-90" />
                </ed:Arc.RenderTransform>
              </ed:Arc>
              <Canvas x:Name="PART_BusyBar" Canvas.Left="0" Canvas.Top="0" Visibility="Hidden">
                <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}">
                  <Canvas.Left>
                    <MultiBinding Converter="{StaticResource AngleToCoordinateConverter}" ConverterParameter="X">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" Converter="{StaticResource NumberPositiveToNegativeConverter}" />
                      <Binding RelativeSource="{RelativeSource Self}" Path="(controls:ProgressRing.Angle)" />
                      <Binding ElementName="PART_Track" Path="ActualWidth" />
                      <Binding ElementName="PART_Track" Path="ActualHeight" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                    </MultiBinding>
                  </Canvas.Left>
                  <Canvas.Top>
                    <MultiBinding Converter="{StaticResource AngleToCoordinateConverter}" ConverterParameter="Y">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" Converter="{StaticResource NumberPositiveToNegativeConverter}" />
                      <Binding RelativeSource="{RelativeSource Self}" Path="(controls:ProgressRing.Angle)" />
                      <Binding ElementName="PART_Track" Path="ActualWidth" />
                      <Binding ElementName="PART_Track" Path="ActualHeight" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                    </MultiBinding>
                  </Canvas.Top>
                </Ellipse>
                <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}">
                  <Canvas.Left>
                    <MultiBinding Converter="{StaticResource AngleToCoordinateConverter}" ConverterParameter="X">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" Converter="{StaticResource NumberPositiveToNegativeConverter}" />
                      <Binding RelativeSource="{RelativeSource Self}" Path="(controls:ProgressRing.Angle)" />
                      <Binding ElementName="PART_Track" Path="ActualWidth" />
                      <Binding ElementName="PART_Track" Path="ActualHeight" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                    </MultiBinding>
                  </Canvas.Left>
                  <Canvas.Top>
                    <MultiBinding Converter="{StaticResource AngleToCoordinateConverter}" ConverterParameter="Y">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" Converter="{StaticResource NumberPositiveToNegativeConverter}" />
                      <Binding RelativeSource="{RelativeSource Self}" Path="(controls:ProgressRing.Angle)" />
                      <Binding ElementName="PART_Track" Path="ActualWidth" />
                      <Binding ElementName="PART_Track" Path="ActualHeight" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                    </MultiBinding>
                  </Canvas.Top>
                </Ellipse>
                <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}">
                  <Canvas.Left>
                    <MultiBinding Converter="{StaticResource AngleToCoordinateConverter}" ConverterParameter="X">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" Converter="{StaticResource NumberPositiveToNegativeConverter}" />
                      <Binding RelativeSource="{RelativeSource Self}" Path="(controls:ProgressRing.Angle)" />
                      <Binding ElementName="PART_Track" Path="ActualWidth" />
                      <Binding ElementName="PART_Track" Path="ActualHeight" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                    </MultiBinding>
                  </Canvas.Left>
                  <Canvas.Top>
                    <MultiBinding Converter="{StaticResource AngleToCoordinateConverter}" ConverterParameter="Y">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" Converter="{StaticResource NumberPositiveToNegativeConverter}" />
                      <Binding RelativeSource="{RelativeSource Self}" Path="(controls:ProgressRing.Angle)" />
                      <Binding ElementName="PART_Track" Path="ActualWidth" />
                      <Binding ElementName="PART_Track" Path="ActualHeight" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                    </MultiBinding>
                  </Canvas.Top>
                </Ellipse>
                <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}">
                  <Canvas.Left>
                    <MultiBinding Converter="{StaticResource AngleToCoordinateConverter}" ConverterParameter="X">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" Converter="{StaticResource NumberPositiveToNegativeConverter}" />
                      <Binding RelativeSource="{RelativeSource Self}" Path="(controls:ProgressRing.Angle)" />
                      <Binding ElementName="PART_Track" Path="ActualWidth" />
                      <Binding ElementName="PART_Track" Path="ActualHeight" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                    </MultiBinding>
                  </Canvas.Left>
                  <Canvas.Top>
                    <MultiBinding Converter="{StaticResource AngleToCoordinateConverter}" ConverterParameter="Y">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" Converter="{StaticResource NumberPositiveToNegativeConverter}" />
                      <Binding RelativeSource="{RelativeSource Self}" Path="(controls:ProgressRing.Angle)" />
                      <Binding ElementName="PART_Track" Path="ActualWidth" />
                      <Binding ElementName="PART_Track" Path="ActualHeight" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                    </MultiBinding>
                  </Canvas.Top>
                </Ellipse>
                <Ellipse Fill="{TemplateBinding Foreground}" StrokeThickness="0" Width="{TemplateBinding params:Progress.BusyElementSize}" Height="{TemplateBinding params:Progress.BusyElementSize}">
                  <Canvas.Left>
                    <MultiBinding Converter="{StaticResource AngleToCoordinateConverter}" ConverterParameter="X">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" Converter="{StaticResource NumberPositiveToNegativeConverter}" />
                      <Binding RelativeSource="{RelativeSource Self}" Path="(controls:ProgressRing.Angle)" />
                      <Binding ElementName="PART_Track" Path="ActualWidth" />
                      <Binding ElementName="PART_Track" Path="ActualHeight" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                    </MultiBinding>
                  </Canvas.Left>
                  <Canvas.Top>
                    <MultiBinding Converter="{StaticResource AngleToCoordinateConverter}" ConverterParameter="Y">
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" Converter="{StaticResource NumberPositiveToNegativeConverter}" />
                      <Binding RelativeSource="{RelativeSource Self}" Path="(controls:ProgressRing.Angle)" />
                      <Binding ElementName="PART_Track" Path="ActualWidth" />
                      <Binding ElementName="PART_Track" Path="ActualHeight" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(params:Progress.BusyElementSize)" />
                    </MultiBinding>
                  </Canvas.Top>
                </Ellipse>
              </Canvas>
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="State" Value="Busy" />
                <Condition Property="IsEnabled" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="BackgroundArc" Property="Visibility" Value="Hidden" />
                <Setter TargetName="PART_Arc" Property="Visibility" Value="Hidden" />
                <Setter TargetName="PART_BusyBar" Property="Visibility" Value="Visible" />
              </MultiTrigger.Setters>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="State" Value="Indeterminate">
        <Setter Property="BorderBrush" Value="{x:Null}" />
      </Trigger>
      <Trigger Property="State" Value="Busy">
        <Setter Property="BorderBrush" Value="{x:Null}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{StaticResource DisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Background" Value="{StaticResource MiddleLightBrush}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Background}" StrokeThickness="0" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="SliderRepeatButtonValuableStyle" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource SliderRepeatButtonStyle}">
    <Setter Property="Background" Value="{StaticResource AccentBrush}" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Background" Value="{StaticResource MiddleLightBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource BackgroundBrush}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource LowlightBrush}" />
      </Trigger>
      <Trigger Property="IsDragging" Value="True">
        <Setter Property="Background" Value="{StaticResource LowlightBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="HorizontalSliderTemplate" TargetType="{x:Type Slider}">
    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <TickBar Grid.Row="0" Fill="{TemplateBinding BorderBrush}" Placement="Top" Height="{TemplateBinding params:Slider.TrackSize}" Visibility="Collapsed" />
      <Rectangle x:Name="PART_SelectionRange" Grid.Row="1" Fill="{StaticResource ForegroundBrush}" StrokeThickness="0" Height="{TemplateBinding params:Slider.TrackSize}" Visibility="Hidden" />
      <Track x:Name="PART_Track" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Track.DecreaseRepeatButton>
          <RepeatButton Command="{x:Static Slider.DecreaseLarge}" IsEnabled="{TemplateBinding IsEnabled}" Height="{TemplateBinding params:Slider.TrackSize}" Style="{StaticResource SliderRepeatButtonValuableStyle}" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb BorderThickness="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.DefaultPaddingValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Right}" IsEnabled="{TemplateBinding IsEnabled}" Width="{TemplateBinding params:Slider.ThumbThickness}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight, Mode=OneWay}" Style="{StaticResource SliderThumbStyle}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Command="{x:Static Slider.IncreaseLarge}" IsEnabled="{TemplateBinding IsEnabled}" Height="{TemplateBinding params:Slider.TrackSize}" Style="{StaticResource SliderRepeatButtonStyle}" />
        </Track.IncreaseRepeatButton>
      </Track>
      <TickBar Grid.Row="2" Fill="{TemplateBinding BorderBrush}" Placement="Bottom" Height="{TemplateBinding params:Slider.TrackSize}" Visibility="Collapsed" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="VerticalSliderTemplate" TargetType="{x:Type Slider}">
    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <TickBar Grid.Column="0" Fill="{TemplateBinding BorderBrush}" Placement="Top" Width="{TemplateBinding params:Slider.TrackSize}" Visibility="Collapsed" />
      <Rectangle x:Name="PART_SelectionRange" Grid.Column="1" Fill="{StaticResource ForegroundBrush}" StrokeThickness="0" Width="{TemplateBinding params:Slider.TrackSize}" Visibility="Hidden" />
      <Track x:Name="PART_Track" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Track.DecreaseRepeatButton>
          <RepeatButton Command="{x:Static Slider.DecreaseLarge}" IsEnabled="{TemplateBinding IsEnabled}" Width="{TemplateBinding params:Slider.TrackSize}" Style="{StaticResource SliderRepeatButtonValuableStyle}" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb BorderThickness="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.DefaultPaddingValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Top}" IsEnabled="{TemplateBinding IsEnabled}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth, Mode=OneWay}" Height="{TemplateBinding params:Slider.ThumbThickness}" Style="{StaticResource SliderThumbStyle}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Command="{x:Static Slider.IncreaseLarge}" IsEnabled="{TemplateBinding IsEnabled}" Width="{TemplateBinding params:Slider.TrackSize}" Style="{StaticResource SliderRepeatButtonStyle}" />
        </Track.IncreaseRepeatButton>
      </Track>
      <TickBar Grid.Column="2" Fill="{TemplateBinding BorderBrush}" Placement="Bottom" Width="{TemplateBinding params:Slider.TrackSize}" Visibility="Collapsed" />
    </Grid>
  </ControlTemplate>
  <Style TargetType="{x:Type Slider}">
    <Setter Property="Background" Value="{x:Null}" />
    <Setter Property="BorderBrush" Value="{StaticResource MiddleLightBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.ContentFontSize), Mode=OneWay}" />
    <Setter Property="FontStretch" Value="Medium" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="BorderBrush" Value="{StaticResource DisabledBrush}" />
      </Trigger>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="MinHeight" Value="14" />
        <Setter Property="Height" Value="18" />
        <Setter Property="MaxHeight" Value="22" />
        <Setter Property="Template" Value="{StaticResource HorizontalSliderTemplate}" />
      </Trigger>
      <Trigger Property="Orientation" Value="Vertical">
        <Setter Property="MinWidth" Value="14" />
        <Setter Property="Width" Value="18" />
        <Setter Property="MaxWidth" Value="22" />
        <Setter Property="Template" Value="{StaticResource VerticalSliderTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="ToggleSwitchSwitchStyle" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Rectangle Fill="{TemplateBinding Background}" StrokeThickness="0" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ToggleSwitchThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Background" Value="{StaticResource MiddleLightBrush}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource LowlightBrush}" />
      </Trigger>
      <Trigger Property="IsDragging" Value="True">
        <Setter Property="Background" Value="{StaticResource LowlightBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type controls:ToggleSwitch}" TargetType="{x:Type controls:ToggleSwitch}">
    <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource MiddleLightBrush}" />
    <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.DefaultThickness), Mode=OneWay}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.ContentFontSize), Mode=OneWay}" />
    <Setter Property="FontStretch" Value="Medium" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="MinHeight" Value="12" />
    <Setter Property="Height" Value="16" />
    <Setter Property="MaxHeight" Value="20" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:ToggleSwitch}">
          <Grid Background="{x:Null}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontStretch="{TemplateBinding FontStretch}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontWeight="{TemplateBinding FontWeight}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:ToggleSwitch.TrackSize), Mode=OneWay, Converter={StaticResource DoubleToGridLengthConverter}}" />
            </Grid.ColumnDefinitions>
            <ContentPresenter x:Name="OnHeaderHost" Grid.Column="0" Content="{TemplateBinding OnHeader}" ContentStringFormat="{TemplateBinding OnHeaderStringFormat}" ContentTemplate="{TemplateBinding OnHeaderTemplate}" ContentTemplateSelector="{TemplateBinding OnHeaderTemplateSelector}" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed" />
            <ContentPresenter x:Name="OffHeaderHost" Grid.Column="0" Content="{TemplateBinding OffHeader}" ContentStringFormat="{TemplateBinding OffHeaderStringFormat}" ContentTemplate="{TemplateBinding OffHeaderTemplate}" ContentTemplateSelector="{TemplateBinding OffHeaderTemplateSelector}" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed" />
            <Border x:Name="PART_Track" Grid.Column="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <DockPanel>
                <Rectangle x:Name="PART_Fill" DockPanel.Dock="Left" Fill="{StaticResource AccentBrush}" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:General.DefaultThicknessValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter='Left, Top, Bottom'}" Panel.ZIndex="0" Width="0" />
                <Thumb x:Name="PART_Thumb" DockPanel.Dock="Left" BorderBrush="{TemplateBinding Background}" BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:General.DefaultThicknessValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Right}" IsEnabled="{TemplateBinding IsEnabled}" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Mode=OneWay, Converter={StaticResource ThicknessPositiveToNegativeConverter}}" Width="{TemplateBinding params:ToggleSwitch.ThumbThickness}" Panel.ZIndex="1" Style="{StaticResource ToggleSwitchThumbStyle}" />
                <Button x:Name="PART_Switch" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:General.DefaultThicknessValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter='Right, Top, Bottom'}" Panel.ZIndex="0" Style="{StaticResource ToggleSwitchSwitchStyle}" />
              </DockPanel>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="False">
              <Setter TargetName="OffHeaderHost" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="OnHeaderHost" Property="Visibility" Value="Visible" />
              <Setter TargetName="PART_Fill" Property="DockPanel.Dock" Value="Right" />
              <Setter TargetName="PART_Fill" Property="Fill" Value="{StaticResource HighlightBrush}" />
              <Setter TargetName="PART_Fill" Property="Margin" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:General.DefaultThicknessValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter='Right, Top, Bottom'}" />
              <Setter TargetName="PART_Thumb" Property="DockPanel.Dock" Value="Right" />
              <Setter TargetName="PART_Thumb" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:General.DefaultThicknessValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Left}" />
              <Setter TargetName="PART_Thumb" Property="Margin" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Mode=OneWay, Converter={StaticResource ThicknessPositiveToNegativeConverter}}" />
              <Setter TargetName="PART_Switch" Property="Margin" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:General.DefaultThicknessValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter='Left, Top, Bottom'}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="True" />
                <Condition Property="IsEnabled" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="PART_Switch" Property="Background" Value="{StaticResource AccentBrush}" />
              </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSwitching" Value="True" />
                <Condition Property="IsChecked" Value="False" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="PART_Thumb" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:General.DefaultThicknessValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Left}" />
              </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSwitching" Value="True" />
                <Condition Property="IsChecked" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="PART_Thumb" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:General.DefaultThicknessValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Right}" />
              </MultiTrigger.Setters>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FontSize, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=18}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
      </DataTrigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DisabledBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
    
    
    <SolidColorBrush x:Key="ButtonIconBackground_Normal" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ButtonIconForeground_Normal" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="PaneTabOuterBorder_Normal" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ButtonIconForeground_MouseOver" Color="#FF000000" />
    <SolidColorBrush x:Key="ButtonIconBackground_MouseOver" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ButtonIconForeground_Pressed" Color="#FF000000" />
    <SolidColorBrush x:Key="ButtonIconBackground_Pressed" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ButtonIconForeground_Disabled" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ButtonIconBackground_Disabled" Color="#FFFFFFFF" />
    <Thickness x:Key="HeaderButtonMargin">0 2 2 1</Thickness>
    <Style x:Key="PaneHeader_PinButtonStyle" TargetType="telerik:RadButton">
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Margin" Value="{StaticResource HeaderButtonMargin}" />
        <Setter Property="IsTabStop" Value="False" />


        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid>

                        <telerikChromes:ButtonChrome  RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" />
                        <Path x:Name="BackgroundIcon" Stroke="{StaticResource ButtonIconBackground_Normal}" Margin="0 2 0 0" StrokeThickness="1" Width="7" Height="10" Data="M0,6.5 L7,6.5 M1.5,6.5 L1.5,1.5 L2.5,0.5 L4.5,0.5 L5.5,1.5 L5.5,6.5 M3.5,6.5 L3.5,10 M4.5,6.5 L4.5,0.5" />
                        <Path x:Name="ForegroundIcon" Stroke="{StaticResource ButtonIconForeground_Normal}" Margin="0 1 0 1" StrokeThickness="1" Width="7" Height="10" Data="M0,6.5 L7,6.5 M1.5,6.5 L1.5,1.5 L2.5,0.5 L4.5,0.5 L5.5,1.5 L5.5,6.5 M3.5,6.5 L3.5,10 M4.5,6.5 L4.5,0.5" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ForegroundIcon" Property="Stroke" Value="{StaticResource ButtonIconForeground_MouseOver}" />
                            <Setter TargetName="BackgroundIcon" Property="Stroke" Value="{StaticResource ButtonIconBackground_MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ForegroundIcon" Property="Stroke" Value="{StaticResource ButtonIconForeground_Pressed}" />
                            <Setter TargetName="BackgroundIcon" Property="Stroke" Value="{StaticResource ButtonIconBackground_Pressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ForegroundIcon" Property="Stroke" Value="{StaticResource ButtonIconForeground_Disabled}" />
                            <Setter TargetName="BackgroundIcon" Property="Stroke" Value="{StaticResource ButtonIconBackground_Disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PaneHeader_UnPinButtonStyle" TargetType="telerik:RadButton">
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Margin" Value="{StaticResource HeaderButtonMargin}" />
        <Setter Property="IsTabStop" Value="False" />

        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid>

                        <telerikChromes:ButtonChrome  RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" />
                        <Path x:Name="BackgroundIcon" Stroke="{StaticResource ButtonIconBackground_Normal}" Margin="0 2 0 0" StrokeThickness="1" Width="10" Height="7" Data="M3.5,0 L3.5,7 M3.5,1.5 L8.5,1.5 L9.5,2.5 L9.5,4.5 L8.5,5.5 L3.5,5.5 M3.5,3.5 L0,3.5 M3.5,4.5 L9.5,4.5" />
                        <Path x:Name="ForegroundIcon" Stroke="{StaticResource ButtonIconForeground_Normal}" Margin="0 1 0 1" StrokeThickness="1" Width="10" Height="7" Data="M3.5,0 L3.5,7 M3.5,1.5 L8.5,1.5 L9.5,2.5 L9.5,4.5 L8.5,5.5 L3.5,5.5 M3.5,3.5 L0,3.5 M3.5,4.5 L9.5,4.5" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ForegroundIcon" Property="Stroke" Value="{StaticResource ButtonIconForeground_MouseOver}" />
                            <Setter TargetName="BackgroundIcon" Property="Stroke" Value="{StaticResource ButtonIconBackground_MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ForegroundIcon" Property="Stroke" Value="{StaticResource ButtonIconForeground_Pressed}" />
                            <Setter TargetName="BackgroundIcon" Property="Stroke" Value="{StaticResource ButtonIconBackground_Pressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ForegroundIcon" Property="Stroke" Value="{StaticResource ButtonIconForeground_Disabled}" />
                            <Setter TargetName="BackgroundIcon" Property="Stroke" Value="{StaticResource ButtonIconBackground_Disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="PaneHeader_CloseButtonStyle" TargetType="telerik:RadButton">
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Margin" Value="{StaticResource HeaderButtonMargin}" />
        <Setter Property="IsTabStop" Value="False" />

        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid x:Name="LayoutRoot">

                        <telerikChromes:ButtonChrome  RenderNormal="False" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" />
                        <Path x:Name="BackgroundIcon" Fill="{StaticResource ButtonIconBackground_Normal}" Margin="0 2 0 0" Width="8" Height="7" Data="M0,0 L2,0 2,1 3,1 3,2 5,2 5,1 6,1 6,0 8,0 8,1 7,1 7,2 6,2 6,3 5,3 5,4 6,4 6,5 6,5 7,5 7,6 8,6 8,7 6,7 6,6 5,6 5,5 3,5 3,6 2,6 2,7 0,7 0,6 1,6 1,5 2,5 2,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1 Z" />
                        <Path x:Name="ForegroundIcon" Fill="{StaticResource ButtonIconForeground_Normal}" Margin="0 1 0 1" Width="8" Height="7" Data="M0,0 L2,0 2,1 3,1 3,2 5,2 5,1 6,1 6,0 8,0 8,1 7,1 7,2 6,2 6,3 5,3 5,4 6,4 6,5 6,5 7,5 7,6 8,6 8,7 6,7 6,6 5,6 5,5 3,5 3,6 2,6 2,7 0,7 0,6 1,6 1,5 2,5 2,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1 Z" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ForegroundIcon" Property="Fill" Value="{StaticResource ButtonIconForeground_MouseOver}" />
                            <Setter TargetName="BackgroundIcon" Property="Fill" Value="{StaticResource ButtonIconBackground_MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ForegroundIcon" Property="Fill" Value="{StaticResource ButtonIconForeground_Pressed}" />
                            <Setter TargetName="BackgroundIcon" Property="Fill" Value="{StaticResource ButtonIconBackground_Pressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ForegroundIcon" Property="Fill" Value="{StaticResource ButtonIconForeground_Disabled}" />
                            <Setter TargetName="BackgroundIcon" Property="Fill" Value="{StaticResource ButtonIconBackground_Disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource LowlightBrush}" />
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.DefaultThickness), Mode=OneWay}" />
        <Setter Property="params:MenuBase.SubmenuBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background, Mode=OneWay}" />
        <Setter Property="params:MenuBase.SubmenuBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderBrush, Mode=OneWay}" />
        <Setter Property="params:MenuBase.SubmenuBorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderThickness, Mode=OneWay}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.ContentFontSize), Mode=OneWay}" />
        <Setter Property="FontStretch" Value="Medium" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
        <Setter Property="params:General.ShadowBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="LayoutRoot">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontStretch="{TemplateBinding FontStretch}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontWeight="{TemplateBinding FontWeight}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=(params:General.ShadowBrush).(SolidColorBrush.Color)}" BlurRadius="4" ShadowDepth="2" Direction="315" Opacity="0.3" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{StaticResource TransparentBrush}" />
                            <Setter TargetName="LayoutRoot" Property="Padding" Value="0,0,6,6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FontSize, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=18}">
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            </DataTrigger>
        </Style.Triggers>
    </Style>-->

  
    <Style x:Key="{x:Type primitives:CommandButtonBase}" TargetType="{x:Type primitives:CommandButtonBase}">
    <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource LowlightBrush}" />
    <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldThickness), Mode=OneWay}" />
    <Setter Property="params:CommandButtons.Mask" Value="{StaticResource LowlightBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.ContentFontSize), Mode=OneWay}" />
    <Setter Property="FontStretch" Value="Medium" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}" />
    <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.SemiBoldPadding), Mode=OneWay}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type primitives:CommandButtonBase}">
          <Grid Background="{StaticResource TransparentBrush}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontStretch="{TemplateBinding FontStretch}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontWeight="{TemplateBinding FontWeight}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Ellipse x:Name="PART_Decor" Grid.Row="0" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessToDoubleConverter}}" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <ContentPresenter x:Name="PART_ContentHost" Grid.Row="0" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <ContentPresenter x:Name="PART_HeaderHost" Grid.Row="1" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Header" Value="{x:Null}">
              <Setter TargetName="PART_HeaderHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FontSize, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=18}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
      </DataTrigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="params:CommandButtons.Mask" Value="{StaticResource ForegroundBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="BorderBrush" Value="{StaticResource MiddleLightBrush}" />
        <Setter Property="params:CommandButtons.Mask" Value="{StaticResource MiddleLightBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="BorderBrush" Value="{StaticResource DisabledBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DisabledBrush}" />
        <Setter Property="params:CommandButtons.Mask" Value="{StaticResource DisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="CommandButtonBaseApplicationBarStyle" TargetType="{x:Type primitives:CommandButtonBase}">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ContrastBrush}" />
    <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldThickness), Mode=OneWay}" />
    <Setter Property="params:CommandButtons.Mask" Value="{StaticResource ContrastBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ContrastBrush}" />
    <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.ContentFontSize), Mode=OneWay}" />
    <Setter Property="FontStretch" Value="Medium" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}" />
    <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.SemiBoldPadding), Mode=OneWay}" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type primitives:CommandButtonBase}">
          <Grid Background="{StaticResource TransparentBrush}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontStretch="{TemplateBinding FontStretch}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontWeight="{TemplateBinding FontWeight}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Ellipse x:Name="PART_Decor" Grid.Row="0" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessToDoubleConverter}}" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <Ellipse Grid.Row="0" Fill="{TemplateBinding params:CommandButtons.Mask}" Stroke="{StaticResource TransparentBrush}" StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessToDoubleConverter}}" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Width="{Binding ElementName=PART_Decor, Path=ActualWidth, Mode=OneWay}" Height="{Binding ElementName=PART_Decor, Path=ActualHeight, Mode=OneWay}">
              <Ellipse.OpacityMask>
                <VisualBrush AutoLayoutContent="True" AlignmentX="Center" AlignmentY="Center" Stretch="None">
                  <VisualBrush.Visual>
                    <ContentPresenter x:Name="PART_ContentHost" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" />
                  </VisualBrush.Visual>
                </VisualBrush>
              </Ellipse.OpacityMask>
            </Ellipse>
            <ContentPresenter x:Name="PART_HeaderHost" Grid.Row="1" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Header" Value="{x:Null}">
              <Setter TargetName="PART_HeaderHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FontSize, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=18}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
      </DataTrigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource SemitransparentContrastBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContrastBrush}" />
        <Setter Property="params:CommandButtons.Mask" Value="{StaticResource ContrastBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{StaticResource ContrastBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContrastBrush}" />
        <Setter Property="params:CommandButtons.Mask" Value="{StaticResource AccentBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="BorderBrush" Value="{StaticResource DisabledBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DisabledBrush}" />
        <Setter Property="params:CommandButtons.Mask" Value="{StaticResource DisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type controls:CommandButton}" TargetType="{x:Type controls:CommandButton}" BasedOn="{StaticResource {x:Type primitives:CommandButtonBase}}" />
  <Style x:Key="CommandButtonApplicationBarStyle" TargetType="{x:Type controls:CommandButton}" BasedOn="{StaticResource CommandButtonBaseApplicationBarStyle}" />
  <Style x:Key="{x:Type controls:ToggleCommandButton}" TargetType="{x:Type controls:ToggleCommandButton}" BasedOn="{StaticResource {x:Type primitives:CommandButtonBase}}">
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="BorderBrush" Value="{StaticResource MiddleLightBrush}" />
        <Setter Property="params:CommandButtons.Mask" Value="{StaticResource MiddleLightBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="ToggleCommandButtonApplicationBarStyle" TargetType="{x:Type controls:ToggleCommandButton}" BasedOn="{StaticResource CommandButtonBaseApplicationBarStyle}">
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Background" Value="{StaticResource ContrastBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContrastBrush}" />
        <Setter Property="params:CommandButtons.Mask" Value="{StaticResource AccentBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="DropDownCommandButtonSubmenuStyle" TargetType="{x:Type controls:Submenu}" BasedOn="{StaticResource {x:Type controls:Submenu}}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:Submenu}">
          <Border x:Name="LayoutRoot" Tag="{DynamicResource {x:Static SystemParameters.DropShadowKey}}">
            <ScrollViewer Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <ScrollViewer.Resources>
                <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource {x:Type ScrollBar}}">
                  <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                      <Setter Property="BorderThickness" Value="0" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </ScrollViewer.Resources>
              <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=LayoutRoot, Path=Tag}" Value="True">
              <Setter TargetName="LayoutRoot" Property="Effect">
                <Setter.Value>
                  <DropShadowEffect Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Submenu}}, Path=(params:General.ShadowBrush).(SolidColorBrush.Color)}" BlurRadius="4" ShadowDepth="0" Direction="90" Opacity="0.7" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="LayoutRoot" Property="Background" Value="{StaticResource TransparentBrush}" />
              <Setter TargetName="LayoutRoot" Property="Padding" Value="4" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type controls:DropDownCommandButton}" TargetType="{x:Type controls:DropDownCommandButton}" BasedOn="{StaticResource {x:Type primitives:CommandButtonBase}}">
    <Style.Resources>
      <Style TargetType="{x:Type controls:Submenu}" BasedOn="{StaticResource DropDownCommandButtonSubmenuStyle}" />
    </Style.Resources>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:DropDownCommandButton}">
          <Grid Background="{StaticResource TransparentBrush}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontStretch="{TemplateBinding FontStretch}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontWeight="{TemplateBinding FontWeight}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Ellipse x:Name="PART_Decor" Grid.Row="0" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessToDoubleConverter}}" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <ContentPresenter x:Name="PART_ContentHost" Grid.Row="0" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <ContentPresenter x:Name="PART_HeaderHost" Grid.Row="1" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" />
            <Popup x:Name="PART_Popup" Grid.Row="1" AllowsTransparency="True" IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}" StaysOpen="False" Placement="Custom" VerticalOffset="{TemplateBinding params:General.BoldPaddingValue}" MaxHeight="{TemplateBinding MaxDropDownHeight}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Header" Value="{x:Null}">
              <Setter TargetName="PART_HeaderHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsDropDownOpen" Value="True">
        <Setter Property="BorderBrush" Value="{StaticResource MiddleLightBrush}" />
        <Setter Property="params:CommandButtons.Mask" Value="{StaticResource MiddleLightBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="DropDownCommandButtonApplicationBarStyle" TargetType="{x:Type controls:DropDownCommandButton}" BasedOn="{StaticResource CommandButtonBaseApplicationBarStyle}">
    <Style.Resources>
      <Style TargetType="{x:Type controls:Submenu}" BasedOn="{StaticResource DropDownCommandButtonSubmenuStyle}" />
    </Style.Resources>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:DropDownCommandButton}">
          <Grid Background="{StaticResource TransparentBrush}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontStretch="{TemplateBinding FontStretch}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontWeight="{TemplateBinding FontWeight}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Ellipse x:Name="PART_Decor" Grid.Row="0" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessToDoubleConverter}}" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <Ellipse Grid.Row="0" Fill="{TemplateBinding params:CommandButtons.Mask}" Stroke="{StaticResource TransparentBrush}" StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessToDoubleConverter}}" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Width="{Binding ElementName=PART_Decor, Path=ActualWidth, Mode=OneWay}" Height="{Binding ElementName=PART_Decor, Path=ActualHeight, Mode=OneWay}">
              <Ellipse.OpacityMask>
                <VisualBrush AutoLayoutContent="True" AlignmentX="Center" AlignmentY="Center" Stretch="None">
                  <VisualBrush.Visual>
                    <ContentPresenter x:Name="PART_ContentHost" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" />
                  </VisualBrush.Visual>
                </VisualBrush>
              </Ellipse.OpacityMask>
            </Ellipse>
            <ContentPresenter x:Name="PART_HeaderHost" Grid.Row="1" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" />
            <Popup x:Name="PART_Popup" Grid.Row="1" AllowsTransparency="True" IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}" StaysOpen="False" Placement="Custom" VerticalOffset="{TemplateBinding params:General.BoldPaddingValue}" MaxHeight="{TemplateBinding MaxDropDownHeight}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Header" Value="{x:Null}">
              <Setter TargetName="PART_HeaderHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsDropDownOpen" Value="True">
        <Setter Property="Background" Value="{StaticResource ContrastBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContrastBrush}" />
        <Setter Property="params:CommandButtons.Mask" Value="{StaticResource AccentBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type controls:ApplicationBar}" TargetType="{x:Type controls:ApplicationBar}">
    <Style.Resources>
      <Style TargetType="{x:Type controls:CommandButton}" BasedOn="{StaticResource CommandButtonApplicationBarStyle}" />
      <Style TargetType="{x:Type controls:ToggleCommandButton}" BasedOn="{StaticResource ToggleCommandButtonApplicationBarStyle}" />
      <Style TargetType="{x:Type controls:DropDownCommandButton}" BasedOn="{StaticResource DropDownCommandButtonApplicationBarStyle}" />
    </Style.Resources>
    <Setter Property="Background" Value="{StaticResource AccentBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource LowlightBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.ContentFontSize), Mode=OneWay}" />
    <Setter Property="FontStretch" Value="Medium" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:ApplicationBar}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontStretch="{TemplateBinding FontStretch}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontWeight="{TemplateBinding FontWeight}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ItemsPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FontSize, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=18}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type controls:Window}" TargetType="{x:Type controls:Window}">
    <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
    <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.SemiBoldThickness), Mode=OneWay}" />
    <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.TextFontSize), Mode=OneWay}" />
    <Setter Property="FontStretch" Value="Medium" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
    <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="True" />
    <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="UseLayoutRounding" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:Window}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid x:Name="PART_LayoutRoot">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid x:Name="PART_Caption" Grid.Row="0" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Mode=OneWay, Converter={StaticResource ThicknessPositiveToNegativeConverter}}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <controls:ProgressBar x:Name="PART_ProgressBar" Grid.ColumnSpan="3" Grid.Row="0" Background="{DynamicResource TransparentBrush}" Value="{TemplateBinding Progress}" VerticalAlignment="Top" Height="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldThicknessValue), Mode=OneWay}" />
                <Border x:Name="PART_Title" Grid.Column="0" Grid.Row="1" Background="{DynamicResource AccentBrush}" BorderThickness="0">
                  <TextBlock x:Name="Title" Text="{TemplateBinding Title}" Foreground="{DynamicResource ContrastBrush}" FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:General.TitleFontSize), Mode=OneWay}" FontWeight="Normal" Margin="10,5" />
                </Border>
                  
                <Grid Grid.Column="2" Grid.Row="1" shell:WindowChrome.IsHitTestVisibleInChrome="True">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Grid.Resources>
                    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                      <Setter Property="Background" Value="{DynamicResource TransparentBrush}" />
                      <Setter Property="BorderBrush" Value="{DynamicResource TransparentBrush}" />
                      <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                      <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                          <Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
                          <Setter Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                          <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                          <Setter Property="Background" Value="{DynamicResource AccentBrush}" />
                          <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}" />
                          <Setter Property="Foreground" Value="{DynamicResource ContrastBrush}" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </Grid.Resources>
                  <Button x:Name="PART_Minimize" Grid.Column="0" BorderThickness="0" Command="{x:Static controls:WindowCommands.Minimize}" Width="34" Height="26" MinWidth="34">
                    <Path Data="{StaticResource MinimizeIcon}" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground, Mode=OneWay}" Stretch="None" Width="10" Height="10" />
                  </Button>
                  <Button x:Name="PART_Maximize" Grid.Column="1" BorderThickness="0" Command="{x:Static controls:WindowCommands.Maximize}" Width="34" Height="26" MinWidth="34">
                    <Path Data="{StaticResource MaximizeIcon}" Stroke="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground, Mode=OneWay}" Stretch="None" Width="10" Height="10" />
                  </Button>
                  <Button x:Name="PART_Restore" Grid.Column="1" BorderThickness="0" Command="{x:Static controls:WindowCommands.Restore}" Width="34" Height="26" MinWidth="34" Visibility="Hidden">
                    <Path Data="{StaticResource RestoreIcon}" Stroke="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground, Mode=OneWay}" Stretch="None" Width="10" Height="10" />
                  </Button>
                  <Button x:Name="PART_Close" Grid.Column="2" BorderThickness="0" Command="{x:Static controls:WindowCommands.Close}" Width="34" Height="26" MinWidth="34">
                    <Path Data="{StaticResource CloseIcon}" Stroke="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground, Mode=OneWay}" Stretch="None" Width="10" Height="10" />
                  </Button>
                </Grid>
              </Grid>
              <AdornerDecorator Grid.Row="1" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                <ContentPresenter Margin="{TemplateBinding Padding}" />
              </AdornerDecorator>
              <Decorator x:Name="PART_ApplicationBarHost" Grid.Row="1" controls:Window.IsApplicationBarHost="True" />
              <ResizeGrip x:Name="PART_Grip" Grid.Row="1" shell:WindowChrome.ResizeGripDirection="BottomRight" IsTabStop="False" Visibility="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.TitleFontSize), Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=18}">
              <Setter TargetName="Title" Property="TextOptions.TextFormattingMode" Value="Ideal" />
            </DataTrigger>
            <Trigger Property="IsBusy" Value="True">
              <Setter TargetName="PART_ProgressBar" Property="State" Value="Indeterminate" />
            </Trigger>
            <Trigger Property="controls:Window.IsMainWindow" Value="False">
              <Setter TargetName="PART_Title" Property="Background" Value="{x:Null}" />
              <Setter TargetName="Title" Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Trigger>
            <Trigger Property="Title" Value="{x:Static system:String.Empty}">
              <Setter TargetName="PART_Title" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="WindowState" Value="Maximized">
              <Setter TargetName="PART_Maximize" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PART_Restore" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="WindowStyle" Value="None">
              <Trigger.Setters>
                <Setter TargetName="PART_Title" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Minimize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Close" Property="Visibility" Value="Collapsed" />
              </Trigger.Setters>
            </Trigger>
            <Trigger Property="WindowStyle" Value="ToolWindow">
              <Trigger.Setters>
                <Setter TargetName="PART_Minimize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
              </Trigger.Setters>
            </Trigger>
            <Trigger Property="ResizeMode" Value="NoResize">
              <Trigger.Setters>
                <Setter TargetName="PART_Minimize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
              </Trigger.Setters>
            </Trigger>
            <Trigger Property="ResizeMode" Value="CanMinimize">
              <Trigger.Setters>
                <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
              </Trigger.Setters>
            </Trigger>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
              <Trigger.Setters>
                <Setter TargetName="PART_Grip" Property="Visibility" Value="Visible" />
              </Trigger.Setters>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FontSize, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=18}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
      </DataTrigger>
      <Trigger Property="WindowStyle" Value="{x:Static WindowStyle.None}">
        <Setter Property="ResizeMode" Value="NoResize" />
      </Trigger>
      <Trigger Property="WindowStyle" Value="{x:Static WindowStyle.ToolWindow}">
        <Setter Property="ResizeMode" Value="NoResize" />
      </Trigger>
    </Style.Triggers>
  </Style>



</ResourceDictionary>