<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ListViewSet="clr-namespace:Elysium.ThemesSet.ListViewSet"
                    xmlns:FontSet="clr-namespace:Elysium.ThemesSet.FontSet">
    <Style TargetType="DataGrid">
        <!--网格线颜色-->
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="FontStyle" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontStyle), Mode=OneWay}" />
        <Setter Property="FontWeight" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontWeight), Mode=OneWay}" />
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontSize), Mode=OneWay}" />
        <Setter Property="FontStretch" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontStretch), Mode=OneWay}" />
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontFamily), Mode=OneWay}" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.NormalBackgrounBrush), Mode=OneWay}"/>
        <Setter Property="CanUserResizeColumns" Value="false"/>
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.BorderThickness), Mode=OneWay}"/>
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.NormalBorderBrush), Mode=OneWay}"/>
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="White"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="White"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <!--<Setter Property="SnapsToDevicePixels" Value="True" />-->
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.HeaderNormalBackground), Mode=OneWay}"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.HeaderNormalForeground), Mode=OneWay}"/>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontSize), Mode=OneWay}" />
        <Setter Property="FontWeight" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontWeight), Mode=OneWay}" />
        <Setter Property="FontStyle" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontStyle), Mode=OneWay}" />
        <Setter Property="SeparatorVisibility" Value="Visible"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                        <Grid >
                        <Border x:Name="BackgroundBorder" BorderThickness="0,0,0,1" 
                             BorderBrush="Black" Background="{TemplateBinding Background}"
                              Width="Auto">
                            <ContentPresenter  Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill"  Grid.Column="2" Width="8" Height="6" Fill="White" Margin="0,0,50,0" 
                            VerticalAlignment="Center" RenderTransformOrigin="1,1" />
                            <Rectangle Width="1" Fill="Black" HorizontalAlignment="Right" />
                        </Grid>
                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.RowHeadHeightt), Mode=OneWay}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter   Property="Background" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.HeaderMouseOverBackground), Mode=OneWay}"/>
                <Setter   Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.HeaderMouseOverForeground), Mode=OneWay}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter   Property="Background" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.HeaderPressedBackground), Mode=OneWay}"/>
                <Setter   Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.HeaderPressedForeground), Mode=OneWay}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--行样式触发-->
    <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
    <Style  TargetType="DataGridRow">
       
        <Setter Property="FontStyle" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontStyle), Mode=OneWay}" />
        <Setter Property="FontWeight" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontWeight), Mode=OneWay}" />
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontSize), Mode=OneWay}" />
        <Setter Property="FontStretch" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontStretch), Mode=OneWay}" />
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.MyFontFamily), Mode=OneWay}" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.ItemNormalBackground), Mode=OneWay}"/>
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=(FontSet:FontAttriXaml.RowHeightt), Mode=OneWay}"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.ItemNormalForeground), Mode=OneWay}"/>
        <Style.Triggers>
            <!--隔行换色-->
            <!--<Trigger Property="AlternationIndex" Value="0" >
                <Setter Property="Background" Value="#e7e7e7" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1" >
                <Setter Property="Background" Value="#f2f2f2" />
            </Trigger>-->

            <Trigger Property="IsMouseOver" Value="True">
                <Setter  Property="Background" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.ItemMouseOverBackground), Mode=OneWay}"/>
                <Setter  Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.ItemMouseOverForeground), Mode=OneWay}"/>
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter  Property="Background" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.ItemSelectedBackground), Mode=OneWay}"/>
                <Setter  Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self},Path=(ListViewSet:ListViewAttriXaml.ItemSelectedForeground), Mode=OneWay}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--单元格样式触发-->
    <Style TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <TextBlock TextAlignment="Center" VerticalAlignment="Center"  >
                           <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
   
</ResourceDictionary>