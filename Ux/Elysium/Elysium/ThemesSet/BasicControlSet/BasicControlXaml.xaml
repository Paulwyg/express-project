<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:params="clr-namespace:Elysium.Parameters" xmlns:primitives="clr-namespace:Elysium.Controls.Primitives" xmlns:controls="clr-namespace:Elysium.Controls" xmlns:converters="clr-namespace:Elysium.Converters"
                   
                       xmlns:telerik="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
    xmlns:telerikNavigation="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Navigation"
    xmlns:telerikNavigationPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls.Navigation"
    xmlns:telerikChromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls"
                    xmlns:Common="clr-namespace:Elysium.ThemesSet.Common">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/Elysium;component/Themes/Brushes.xaml" />
    <ResourceDictionary Source="/Elysium;component/Themes/LightBrushes.xaml" />
        <ResourceDictionary Source="/Elysium;component/ThemesSet/ButtonSet/ButtonStyle.xaml" />
        <!--<ResourceDictionary Source="/Elysium;component/Themes/Scrolls/MacScrollViewer.xaml" />
        <ResourceDictionary Source="/Elysium;component/Themes/Scrolls/MacScrollBar.xaml" />
        <ResourceDictionary Source="/Elysium;component/Themes/ListView/MacListView.xaml" />
        <ResourceDictionary Source="/Elysium;component/Themes/Menus/MacMenu.xaml" />
        <ResourceDictionary Source="/Elysium;component/Themes/DateTimePicker/MacDatePicker.xaml" />
        <ResourceDictionary Source="/Elysium;component/Themes/DateTimePicker/MacTimePicker.xaml" />-->
    </ResourceDictionary.MergedDictionaries>
  <converters:DoubleToGridLengthConverter x:Key="DoubleToGridLengthConverter" />
  <converters:DoubleToThicknessConverter x:Key="DoubleToThicknessConverter" />
  <converters:GridLengthToDoubleConverter x:Key="GridLengthToDoubleConverter" />
  <converters:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter" />
  <converters:PercentToAngleConverter x:Key="PercentToAngleConverter" />
  <converters:AngleToCoordinateConverter x:Key="AngleToCoordinateConverter" />
  <converters:NumberPositiveToNegativeConverter x:Key="NumberPositiveToNegativeConverter" />
  <converters:ThicknessPositiveToNegativeConverter x:Key="ThicknessPositiveToNegativeConverter" />
  <converters:ThicknessConverter x:Key="ThicknessConverter" />
    <converters:TabItemNameConverter x:Key="myTabItemNameConverter" />
  <converters:IsGreaterThanConverter x:Key="IsGreaterThanConverter" />
  <Style x:Key="FocusVisualStyle">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="{TemplateBinding params:General.DefaultPadding}" Stroke="{StaticResource ForegroundBrush}" StrokeThickness="{TemplateBinding params:General.DefaultThicknessValue}" StrokeDashArray="2 1" RenderOptions.EdgeMode="Aliased" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <GeometryGroup x:Key="AdvancedIcon">
    <EllipseGeometry Center="3,3" RadiusX="2.5" RadiusY="2.5" />
    <EllipseGeometry Center="12,3" RadiusX="2.5" RadiusY="2.5" />
    <EllipseGeometry Center="21,3" RadiusX="2.5" RadiusY="2.5" />
  </GeometryGroup>
  <GeometryGroup x:Key="MinimizeIcon" FillRule="EvenOdd">
    <RectangleGeometry Rect="0,0,10,10" />
    <RectangleGeometry Rect="0,0,10,7" />
  </GeometryGroup>
  <GeometryGroup x:Key="MaximizeIcon">
    <LineGeometry StartPoint="0,0.5" EndPoint="10,0.5" />
    <LineGeometry StartPoint="0,1.5" EndPoint="10,1.5" />
    <LineGeometry StartPoint="0,2.5" EndPoint="10,2.5" />
    <LineGeometry StartPoint="0.5,3" EndPoint="0.5,10" />
    <LineGeometry StartPoint="9.5,3" EndPoint="9.5,10" />
    <LineGeometry StartPoint="1,9.5" EndPoint="9,9.5" />
  </GeometryGroup>
  <GeometryGroup x:Key="RestoreIcon">
    <LineGeometry StartPoint="3,0.5" EndPoint="10,0.5" />
    <LineGeometry StartPoint="3,1.5" EndPoint="10,1.5" />
    <LineGeometry StartPoint="3.5,2" EndPoint="3.5,3" />
    <LineGeometry StartPoint="9.5,2" EndPoint="9.5,7" />
    <LineGeometry StartPoint="7,6.5" EndPoint="10,6.5" />
    <LineGeometry StartPoint="0,3.5" EndPoint="7,3.5" />
    <LineGeometry StartPoint="0,4.5" EndPoint="7,4.5" />
    <LineGeometry StartPoint="0.5,5" EndPoint="0.5,10" />
    <LineGeometry StartPoint="6.5,5" EndPoint="6.5,10" />
    <LineGeometry StartPoint="1,9.5" EndPoint="6,9.5" />
  </GeometryGroup>
  <GeometryGroup x:Key="CloseIcon">
    <LineGeometry StartPoint="1.5,0.5" EndPoint="9.5,8.5" />
    <LineGeometry StartPoint="0.5,1.5" EndPoint="8.5,9.5" />
    <LineGeometry StartPoint="1.5,1.5" EndPoint="8.5,8.5" />
    <LineGeometry StartPoint="8.5,0.5" EndPoint="0.5,8.5" />
    <LineGeometry StartPoint="9.5,1.5" EndPoint="1.5,9.5" />
    <LineGeometry StartPoint="8.5,1.5" EndPoint="1.5,8.5" />
  </GeometryGroup>

    
    
    
    
  
  <Style TargetType="{x:Type CheckBox}">
    <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource MiddleLightBrush}" />
    <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.DefaultThickness), Mode=OneWay}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.ContentFontSize), Mode=OneWay}" />
    <Setter Property="FontStretch" Value="Medium" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Left}" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <BulletDecorator Background="{StaticResource TransparentBrush}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontWeight="{TemplateBinding FontWeight}" FlowDirection="{TemplateBinding FlowDirection}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <BulletDecorator.Bullet>
              <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding params:Bullet.DecoratorSize}" Height="{TemplateBinding params:Bullet.DecoratorSize}">
                <Grid>
                  <Path x:Name="CheckBullet" Stroke="{StaticResource AccentBrush}" StrokeThickness="{TemplateBinding params:General.BoldThicknessValue}" Stretch="Fill" Visibility="Collapsed" Width="{TemplateBinding params:CheckBox.CheckSize}" Height="{TemplateBinding params:CheckBox.CheckSize}">
                    <Path.Data>
                      <GeometryGroup>
                        <LineGeometry StartPoint="0,3" EndPoint="4,8" />
                        <LineGeometry StartPoint="4,8" EndPoint="8,0" />
                      </GeometryGroup>
                    </Path.Data>
                  </Path>
                  <Path x:Name="IndeterminateBullet" Fill="{StaticResource AccentBrush}" StrokeThickness="0" Stretch="Fill" Visibility="Collapsed" Margin="2" Width="{TemplateBinding params:Bullet.Size}" Height="{TemplateBinding params:Bullet.Size}">
                    <Path.Data>
                      <GeometryGroup>
                        <RectangleGeometry Rect="0,0,1,1" />
                      </GeometryGroup>
                    </Path.Data>
                  </Path>
                </Grid>
              </Border>
            </BulletDecorator.Bullet>
            <Border Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:General.BoldPaddingValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Left}">
              <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
            </Border>
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="CheckBullet" Property="Visibility" Value="Visible" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsThreeState" Value="True" />
                <Condition Property="IsChecked" Value="{x:Null}" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="IndeterminateBullet" Property="Visibility" Value="Visible" />
              </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="CheckBullet" Property="Path.Stroke" Value="{StaticResource DisabledBrush}" />
              <Setter TargetName="IndeterminateBullet" Property="Path.Fill" Value="{StaticResource DisabledBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource MiddleLightBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource LowlightBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DisabledBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type RadioButton}">
    <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource MiddleLightBrush}" />
    <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.DefaultThickness), Mode=OneWay}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.ContentFontSize), Mode=OneWay}" />
    <Setter Property="FontStretch" Value="Medium" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Left}" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <BulletDecorator Background="{StaticResource TransparentBrush}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontWeight="{TemplateBinding FontWeight}" FlowDirection="{TemplateBinding FlowDirection}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <BulletDecorator.Bullet>
              <Grid Width="{TemplateBinding params:Bullet.DecoratorSize}" Height="{TemplateBinding params:Bullet.DecoratorSize}">
                <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Mode=OneWay, Converter={StaticResource ThicknessToDoubleConverter}}" />
                <Ellipse x:Name="CheckBullet" Fill="{StaticResource AccentBrush}" StrokeThickness="0" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center" Width="{TemplateBinding params:Bullet.Size}" Height="{TemplateBinding params:Bullet.Size}"></Ellipse>
              </Grid>
            </BulletDecorator.Bullet>
            <Border Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(params:General.BoldPaddingValue), Mode=OneWay, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter=Left}">
              <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
            </Border>
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="CheckBullet" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="CheckBullet" Property="Ellipse.Fill" Value="{StaticResource DisabledBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource MiddleLightBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource LowlightBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DisabledBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="TextBoxesBaseStyle" TargetType="{x:Type Control}">
    <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource MiddleLightBrush}" />
    <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.SemiBoldThickness), Mode=OneWay}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Common:CommonXaml.ContentFontSize), Mode=OneWay}" />
    <Setter Property="FontStretch" Value="Medium" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.DefaultPadding), Mode=OneWay}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ScrollViewer x:Name="PART_ContentHost" Background="{x:Null}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" Margin="{TemplateBinding Padding}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FontSize, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=18}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
      </DataTrigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="BorderBrush" Value="{StaticResource DisabledBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="TextBoxBaseStyle" TargetType="{x:Type TextBoxBase}" BasedOn="{StaticResource TextBoxesBaseStyle}">
    <Setter Property="CaretBrush" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="SelectionBrush" Value="{StaticResource MiddleLightBrush}" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsKeyboardFocusWithin" Value="True" />
          <Condition Property="IsReadOnly" Value="False" />
        </MultiTrigger.Conditions>
        <MultiTrigger.Setters>
          <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
          <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        </MultiTrigger.Setters>
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBaseStyle}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
  </Style>
    
  <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource TextBoxBaseStyle}">
    <Style.Resources>
      <Style TargetType="{x:Type FlowDocument}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
      </Style>
    </Style.Resources>
    <Setter Property="OverridesDefaultStyle" Value="True" />
  </Style>

    
    
    


  <Style x:Key="TabItemHeaderStyle" TargetType="{x:Type ContentControl}">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource LowlightBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{StaticResource LowlightBrush}" />
    <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.HeaderFontSize), Mode=OneWay}" />
    <Setter Property="FontStretch" Value="Medium" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}" />
    <Setter Property="Focusable" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontStretch="{TemplateBinding FontStretch}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontWeight="{TemplateBinding FontWeight}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Rectangle x:Name="Indicator" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=(params:TabControl.IndicatorBrush)}" StrokeThickness="0" Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(params:TabControl.IndicatorThickness)}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" />
              <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=TabStripPlacement}" Value="{x:Static Dock.Bottom}">
              <Setter TargetName="Indicator" Property="VerticalAlignment" Value="Top" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=TabStripPlacement}" Value="{x:Static Dock.Left}">
              <Setter Property="LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="Indicator" Property="VerticalAlignment" Value="Bottom" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=TabStripPlacement}" Value="{x:Static Dock.Right}">
              <Setter Property="LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="90" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="Indicator" Property="VerticalAlignment" Value="Bottom" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=TabStripPlacement}" Value="{x:Static Dock.Left}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
      </DataTrigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=TabStripPlacement}" Value="{x:Static Dock.Right}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
      </DataTrigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FontSize, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=18}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
      </DataTrigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
      </Trigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="True">
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
      </DataTrigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="BorderBrush" Value="{StaticResource DisabledBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=Background, Mode=OneWay}"/>
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=BorderBrush, Mode=OneWay}"/>
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=BorderThickness, Mode=OneWay}"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=Foreground, Mode=OneWay}"/>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=FontSize, Mode=OneWay}"/>
        <Setter Property="FontStretch" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=FontStretch, Mode=OneWay}"/>
        <Setter Property="FontStyle" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=FontStyle, Mode=OneWay}"/>
        <Setter Property="FontWeight" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=FontWeight, Mode=OneWay}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(TextOptions.TextFormattingMode), Mode=OneWay}"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(TextOptions.TextRenderingMode), Mode=OneWay}"/>
        <Setter Property="RenderOptions.ClearTypeHint" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(RenderOptions.ClearTypeHint), Mode=OneWay}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}"/>
        <Setter Property="Focusable" Value="True"/>

        <Setter Property="Tag" Value="{Binding DataContext.Title}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=Padding, Mode=OneWay}"/>
        <Setter Property="params:TabItem.HeaderStyle" Value="{StaticResource TabItemHeaderStyle}"/>
        <Setter Property="params:TabControl.IndicatorBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(params:TabControl.IndicatorBrush)}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        
        <Setter Property="Header">
            <Setter.Value>
                <Binding RelativeSource="{RelativeSource Self}" Converter="{StaticResource myTabItemNameConverter}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ContentControl x:Name="ContentHost"
                                    Content="{TemplateBinding Header}"
                                    TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"
                                    TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
                                    RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                                    Style="{TemplateBinding params:TabItem.HeaderStyle}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FontSize, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=18}">
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="params:TabControl.IndicatorBrush" Value="{StaticResource AccentBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource LowlightBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="params:TabControl.IndicatorBrush" Value="{StaticResource HighlightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.TextFontSize), Mode=OneWay}"/>
        <Setter Property="FontStretch" Value="Medium"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Converter={StaticResource ThicknessConverter}, ConverterParameter='Top', Mode=OneWay}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.FontStretch="{TemplateBinding FontStretch}"
                            TextBlock.FontStyle="{TemplateBinding FontStyle}"
                            TextBlock.FontWeight="{TemplateBinding FontWeight}"
                            TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"
                            TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
                            RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                            KeyboardNavigation.DirectionalNavigation="Local"
                            ClipToBounds="{TemplateBinding ClipToBounds}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="FirstColumnDefinition"
                                                  Width="*"/>
                                <ColumnDefinition x:Name="SecondColumnDefinition"
                                                  Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="FirstRowDefinition"
                                               Height="Auto"/>
                                <RowDefinition x:Name="SecondRowDefinition"
                                               Height="*"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Indicator"
                                       Grid.Column="0"
                                       Grid.Row="0"
                                       Fill="{TemplateBinding params:TabControl.IndicatorBrush}"
                                       Height="{TemplateBinding params:TabControl.IndicatorThickness}"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Bottom"/>
                            <TabPanel x:Name="HeaderPanel"
                                      Grid.Column="0"
                                      Grid.Row="0"
                                      IsItemsHost="True"
                                      KeyboardNavigation.TabIndex="1"
                                      Panel.ZIndex="1"/>
                            <Border x:Name="ContentPanel"
                                    Grid.Column="0"
                                    Grid.Row="1"
                                    Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TabItem.Background)}"
                                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TabItem.BorderBrush)}"
                                    BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TabItem.BorderThickness)}"
                                    TextBlock.Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TabItem.Foreground)}"
                                    TextBlock.FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TabItem.FontFamily)}"
                                    TextBlock.FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TabItem.FontSize)}"
                                    TextBlock.FontStretch="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TabItem.FontStretch)}"
                                    TextBlock.FontStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TabItem.FontStyle)}"
                                    TextBlock.FontWeight="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TabItem.FontWeight)}"
                                    TextOptions.TextFormattingMode="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TextOptions.TextFormattingMode)}"
                                    TextOptions.TextRenderingMode="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TextOptions.TextRenderingMode)}"
                                    RenderOptions.ClearTypeHint="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(RenderOptions.ClearTypeHint)}"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2"
                                    KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  ContentSource="SelectedContent"
                                                  Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TabItem.Padding)}"
                                                  HorizontalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TabItem.HorizontalContentAlignment), Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                  VerticalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.(TabItem.VerticalContentAlignment), Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="FirstRowDefinition" Property="Height" Value="*"/>
                            <Setter TargetName="SecondRowDefinition" Property="Height" Value="Auto"/>
                            <Setter TargetName="Indicator" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="Indicator" Property="VerticalAlignment" Value="Top"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="FirstColumnDefinition" Property="Width" Value="Auto"/>
                            <Setter TargetName="SecondColumnDefinition" Property="Width" Value="*"/>
                            <Setter TargetName="FirstRowDefinition" Property="Height" Value="*"/>
                            <Setter TargetName="SecondRowDefinition" Property="Height" Value="0"/>
                            <Setter TargetName="Indicator" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="Indicator" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="Indicator" Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:TabControl.IndicatorThickness)}"/>
                            <Setter TargetName="Indicator" Property="Height" Value="NaN"/>
                            <Setter TargetName="Indicator" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="Indicator" Property="VerticalAlignment" Value="Stretch"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="FirstColumnDefinition" Property="Width" Value="*"/>
                            <Setter TargetName="SecondColumnDefinition" Property="Width" Value="Auto"/>
                            <Setter TargetName="FirstRowDefinition" Property="Height" Value="*"/>
                            <Setter TargetName="SecondRowDefinition" Property="Height" Value="0"/>
                            <Setter TargetName="Indicator" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="Indicator" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="Indicator" Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:TabControl.IndicatorThickness)}"/>
                            <Setter TargetName="Indicator" Property="Height" Value="NaN"/>
                            <Setter TargetName="Indicator" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="Indicator" Property="VerticalAlignment" Value="Stretch"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FontSize, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=18}">
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource DisabledBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


   
</ResourceDictionary>