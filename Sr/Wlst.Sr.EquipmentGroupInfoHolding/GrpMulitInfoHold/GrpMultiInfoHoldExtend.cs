using System;
using System.Collections.Generic;
using Microsoft.Practices.Prism.MefExtensions.Event;
using Microsoft.Practices.Prism.MefExtensions.Event.EventHelper;
using Wlst.Cr.Core.CoreServices;
using Wlst.Cr.Core.EventHandlerHelper;
using Wlst.Cr.Core.UtilityFunction;

using Wlst.Sr.EquipmentGroupInfoHolding.Services;
using Wlst.client;

namespace Wlst.Sr.EquipmentGroupInfoHolding.GrpMulitInfoHold
{
    /// <summary>
    /// 本类对分组实现数据的管理 增删改 以及事件发布、数据库数据更新
    /// </summary>
    public partial class GrpMultiInfoHoldExtend : GrpMultiInfoHold
    {

    
        /// <summary>
        /// 删除所有分组信息;
        /// </summary>
        /// <param name="publishEvent"> 是否发布事件 事件参数为-1</param>
        /// <param name="synchronousDatabase"> 是否同步删除数据库数据</param>
        private void DeleteAllGroupInfoPro(bool publishEvent, bool synchronousDatabase)
        {
            try
            {
                DicGrpInfo.Clear();
            }
            catch (Exception ex)
            {
                Wlst.Cr.Core.UtilityFunction.WriteLog.WriteLogError("Error:" + ex);
            }
            if (publishEvent)
            {
                //发布事件  
                var args = new PublishEventArgs()
                               {
                                   EventType = PublishEventType.Core,
                                   EventId = EventIdAssign.MulitInfoGroupAllNeedUpdate,
                               };
                EventPublisher.EventPublish(args);
            }
            if (synchronousDatabase)
            {
                WriteDbDeleteAllGrpInfomation();
            }
        }

        //#endregion

        #region Write DB

        /// <summary>
        /// 写入本表格的更新时间
        /// </summary>
        /// <returns></returns>
        private bool WriteDbTableTime(long timeNew)
        {
            var strSql = new string[2];
            strSql[0] = "delete from tab_time where tab_name= 'grp_para'";

            strSql[1] = "insert into tab_time(tab_name,tab_update_time)";
            strSql[1] += " values('grp_para'," + timeNew + ")";

            SqlLiteHelper.ExecuteTransactionInThread(strSql);
            return true;
            //return SQLiteHelper.ExecuteTransaction(strSql);
        }

        /// <summary>
        /// 更新分组信息到数据库 先删除数据库该记录再增加
        /// </summary>
        /// <param name="groupInfomatioin"></param>
        /// <returns></returns>
        private bool WriteDbUpdateGrpPara(GroupItemsInfo.GroupItem groupInfomatioin)
        {

            string strLstTml = "";
            string strLstGrp = "";
            foreach (int i in groupInfomatioin.LstTml)
            {
                strLstTml += i + "#";
            }
            //foreach (int i in groupInfomatioin.LstGrp)
            //{
            //    strLstGrp += i + "#";
            //}
            if (strLstTml.Length > 1)
                strLstTml = strLstTml.Substring(0, strLstTml.Length - 1);
            if (strLstGrp.Length > 1)
                strLstGrp = strLstGrp.Substring(0, strLstGrp.Length - 1);

            var strSql = new string[2];
            strSql[0] = "delete from grp_para where grp_id= " + groupInfomatioin.GroupId;

            strSql[1] = "insert into grp_para(grp_id,grp_name,status,tml_list,grp_list)";
            strSql[1] += " values(" + groupInfomatioin.GroupId + ",'" + groupInfomatioin.GroupName + "',";
            strSql[1] += 0 + ",'" + strLstTml + "','";
            strSql[1] += strLstGrp + "')";

            SqlLiteHelper.ExecuteTransactionInThread(strSql);
            return true;
            //return SQLiteHelper.ExecuteTransaction(strSql);
        }

        /// <summary>
        /// 数据库删除分组信息
        /// </summary>
        /// <param name="groupId"></param>
        /// <returns></returns>
        private bool WriteDbDeleteGrpInfomation(int groupId)
        {
            var strSql = "delete from grp_para where grp_id= " + groupId;
            //SQLiteHelper.ExecuteNonQueryInThread(strSql);
            //    return true;
            return SqlLiteHelper.ExecuteNonQuery(strSql) > 0;
        }

        /// <summary>
        /// 数据库删除所有分组信息
        /// </summary>
        /// <returns></returns>
        private bool WriteDbDeleteAllGrpInfomation()
        {
            var strSql = "delete from grp_para";
            return SqlLiteHelper.ExecuteNonQuery(strSql) > 0;
        }

        #endregion




        /// <summary>
        /// 删除所有分组信息  ,发布事件，更新数据库
        /// </summary>
        /// <param name="shouldPublishEvent">是否发布分组删除事件</param>
        protected void DeleteAllGroupInfo(bool shouldPublishEvent)
        {
            this.DeleteAllGroupInfoPro(shouldPublishEvent, true);
        }

        //#endregion
    }


    /// <summary>
    /// 实现对分组信息的事件捕获与更新
    /// </summary>
    public partial class GrpMultiInfoHoldExtend //: GrpMultiInfoHoldingExtend
    {
        /// <summary>
        /// 程序初始化时必须执行一次
        /// </summary>
        public GrpMultiInfoHoldExtend()
        {

            if (BolLoad) return;
            BolLoad = true;
            InnerLoad();
        }

        //加载数据库中数据 并请求与服务器同步
        private void InnerLoad()
        {
            try
            {
                DicGrpInfo.Clear();
            }
            catch (Exception ex)
            {

            }

            try
            {
                var ssss = Convert.ToInt32(SqlLiteHelper.ExecuteQuery(
                    "SELECT COUNT(*) as count FROM sqlite_master WHERE type='table' and name= 'grp_para'").
                                               Tables[0].Rows[0][0].ToString().Trim());


                if (ssss < 1)
                {
                    SqlLiteHelper.ExecuteQuery(
                        "CREATE TABLE 'grp_para' ('grp_id' integer PRIMARY KEY,'grp_name' text," +
                        "'status' integer,'tml_list' text," +
                        "'grp_list' text)");
                }
                System.Data.DataSet ds = SqlLiteHelper.ExecuteQuery("select * from grp_para", null);
                if (ds == null) return;
                int mCount = ds.Tables[0].Rows.Count;
                for (int i = 0; i < mCount; i++)
                {
                    try
                    {
                        //grp_id,grp_name,status,tml_list,grp_list,grp_server_id
                        var grpId = Convert.ToInt32(ds.Tables[0].Rows[i]["grp_id"].ToString().Trim());
                        var grpName = ds.Tables[0].Rows[i]["grp_name"].ToString().Trim();
                       // var status = Convert.ToInt32(ds.Tables[0].Rows[i]["status"].ToString().Trim());
                        var tmlList = ds.Tables[0].Rows[i]["tml_list"].ToString().Trim();
                        var grpList = ds.Tables[0].Rows[i]["grp_list"].ToString().Trim();


                        var groupInfomatioin = new GroupItemsInfo.GroupItem();
                        groupInfomatioin.GroupId = grpId;
                        groupInfomatioin.GroupName = grpName;
                        //groupInfomatioin.Status = status;
                        //groupInfomatioin.IsMarked = false;
                       // groupInfomatioin.LstGrp = new List<int>();
                        groupInfomatioin.LstTml = new List<int>();
                        //groupInfomatioin.MenuRightTargetKey = "RightMenuMulit";
                        string[] sp = tmlList.Split('#');
                        foreach (string str in sp)
                        {
                            if (string.IsNullOrEmpty(str)) continue;
                            try
                            {
                                int tmlId = Convert.ToInt32(str);
                                groupInfomatioin.LstTml.Add(tmlId);
                            }
                            catch (Exception ex)
                            {
                            }
                        }
                        //sp = grpList.Split('#');
                        //foreach (string str in sp)
                        //{
                        //    if (string.IsNullOrEmpty(str)) continue;
                        //    try
                        //    {
                        //        int groupId = Convert.ToInt32(str);
                        //        groupInfomatioin.LstGrp.Add(groupId);
                        //    }
                        //    catch (Exception ex)
                        //    {
                        //    }
                        //}

                        if (!DicGrpInfo.ContainsKey(groupInfomatioin.GroupId))
                            DicGrpInfo.Add(groupInfomatioin.GroupId, groupInfomatioin);
                        else DicGrpInfo[groupInfomatioin.GroupId] = groupInfomatioin;
                    }
                    catch (Exception ex)
                    {
                        WriteLog.WriteLogError(
                            "Class GroupInfoHolding Function LoadGrpInformation Occer an Error:" + ex.ToString());
                    }
                }


            }
            catch (Exception ex)
            {
                WriteLog.WriteLogError("BasicThreeEvent load Reserve error:" + ex);
            }

            //如果正在显示界面的话 需要重新加载数据
            //发布事件  
            var args = new PublishEventArgs()
                           {
                               EventType = PublishEventType.Core,
                               EventId = EventIdAssign.MulitInfoGroupAllNeedUpdate

                           };
            EventPublisher.EventPublish(args);
        }


        #region udpate group info


        /// <summary>
        /// 实现分组数据更新
        /// </summary>
        /// <param name="lstfromServer">所有分组数据信息，必须包含根节点信息 根节点地址为 0</param>
        public void UpdateCoreGroupsInfo(List<GroupItemsInfo.GroupItem> lstfromServer)
        {
            if (lstfromServer == null) return;
            bool bolfind = false;
            foreach (var t in lstfromServer)
            {
                if (t.GroupId == 0)
                {
                    bolfind = true;
                    break;
                }
            }
            if (!bolfind) return;

            //_dicGrpInfo.Clear();
            this.DeleteAllGroupInfo(false);
            foreach (var t in lstfromServer)
            {
                DicGrpInfo.Add(t.GroupId, t);

                this.WriteDbUpdateGrpPara(t);
            }


            //如果正在显示界面的话 需要重新加载数据
            //发布事件  
            var args = new PublishEventArgs()
                           {
                               EventType = PublishEventType.Core,
                               EventId =
                                   EventIdAssign.MulitInfoGroupAllNeedUpdate

                           };
            EventPublisher.EventPublish(args);

        }


        #endregion




    }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 